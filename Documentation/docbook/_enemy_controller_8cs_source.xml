<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__enemy_controller_8cs_source" xml:lang="en-US">
<title>EnemyController.cs</title>
<indexterm><primary>Scripts/Spawnables/EnemyScripts/EnemyController.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__enemy_controller_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__enemy_controller_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_player_scripts">PlayerScripts</link>;
<anchor xml:id="__enemy_controller_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_spawnables_1_1_pickups">Spawnables.Pickups</link>;
<anchor xml:id="__enemy_controller_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_spawnables_1_1_weapons">Spawnables.Weapons</link>;
<anchor xml:id="__enemy_controller_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_tools">Tools</link>;
<anchor xml:id="__enemy_controller_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__enemy_controller_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>UnityEngine.Events;
<anchor xml:id="__enemy_controller_8cs_source_1l00008"/>00008 
<anchor xml:id="__enemy_controller_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_spawnables_1_1_enemy_scripts">Spawnables.EnemyScripts</link>
<anchor xml:id="__enemy_controller_8cs_source_1l00010"/>00010 {
<anchor xml:id="__enemy_controller_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[RequireComponent(typeof(Enemy))]
<anchor xml:id="__enemy_controller_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>EnemyController&#32;:&#32;MonoBehaviour
<anchor xml:id="__enemy_controller_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-------------------&#32;Constants&#32;-------------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;PLAYER_PROJECTILE_TAG&#32;=&#32;<emphasis role="stringliteral">&quot;PlayerProjectile&quot;</emphasis>;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Tag&#32;for&#32;recognizing&#32;player&#32;projectiles</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;BORDER_TAG&#32;=&#32;<emphasis role="stringliteral">&quot;PlayfieldBorder&quot;</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Tag&#32;for&#32;recognizing&#32;playfield&#32;borders</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;TRIGGER_DEBOUNCE_TIME&#32;=&#32;0.01f;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Time&#32;in&#32;seconds&#32;between&#32;OnTrigger&#32;calls</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;prevent&#32;double&#32;aggro&#32;switches</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Public&#32;Fields&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasAggro&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_spawnables_1_1_weapons_1_1_weapon">Weapon</link>&#32;weapon;
<anchor xml:id="__enemy_controller_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">event</emphasis>&#32;Action&#32;ShootsEvent;
<anchor xml:id="__enemy_controller_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Events&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_tools_1_1_game_object_event">GameObjectEvent</link>&#32;onTakesHitEvent;
<anchor xml:id="__enemy_controller_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UnityEvent&#32;onDeathEvent;
<anchor xml:id="__enemy_controller_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Private&#32;Fields&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Enemy&#32;_enemyVariables;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Characteristics&#32;of&#32;the&#32;enemy&#32;from&#32;the&#32;Enemy&#32;class</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_currentHealth;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Current&#32;health&#32;of&#32;the&#32;enemy</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_timeOfLastTrigger;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Exact&#32;time&#32;of&#32;last&#32;OnTrigger&#32;call&#32;in&#32;seconds</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Unity&#32;Callbacks&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00060"/>00060 
<anchor xml:id="__enemy_controller_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__enemy_controller_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enemyVariables&#32;=&#32;GetComponent&lt;Enemy&gt;();
<anchor xml:id="__enemy_controller_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentHealth&#32;=&#32;_enemyVariables.maxHealth;
<anchor xml:id="__enemy_controller_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BombController.OnBombDamageTick&#32;+=&#32;OnBombDamageTick;
<anchor xml:id="__enemy_controller_8cs_source_1l00066"/>00066 
<anchor xml:id="__enemy_controller_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weapon&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__enemy_controller_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;weapon.HasAggro&#32;=&#32;hasAggro;
<anchor xml:id="__enemy_controller_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00072"/>00072 
<anchor xml:id="__enemy_controller_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__enemy_controller_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enemyVariables.tracksPlayer)&#32;RotateTowardsPlayer();
<anchor xml:id="__enemy_controller_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;whether&#32;the&#32;enemy&#32;has&#32;been&#32;hit&#32;by&#32;a&#32;player&#32;projectile,&#32;and&#32;despawns&#32;it&#32;or&#32;damages&#32;it</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTriggerEnter2D(Collider2D&#32;other)
<anchor xml:id="__enemy_controller_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.time&#32;-&#32;_timeOfLastTrigger&#32;&lt;&#32;TRIGGER_DEBOUNCE_TIME)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;collidedObject&#32;=&#32;other.gameObject;
<anchor xml:id="__enemy_controller_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collidedObject.CompareTag(PLAYER_PROJECTILE_TAG))
<anchor xml:id="__enemy_controller_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnProjectileCollision(collidedObject);
<anchor xml:id="__enemy_controller_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeOfLastTrigger&#32;=&#32;Time.time;
<anchor xml:id="__enemy_controller_8cs_source_1l00090"/>00090 
<anchor xml:id="__enemy_controller_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00092"/>00092 
<anchor xml:id="__enemy_controller_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;whether&#32;the&#32;enemy&#32;has&#32;crossed&#32;the&#32;playfield&#32;border,&#32;and&#32;switches&#32;aggro&#32;if&#32;so</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTriggerExit2D(Collider2D&#32;other)
<anchor xml:id="__enemy_controller_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.time&#32;-&#32;_timeOfLastTrigger&#32;&lt;&#32;TRIGGER_DEBOUNCE_TIME)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;collidedObject&#32;=&#32;other.gameObject;
<anchor xml:id="__enemy_controller_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collidedObject.CompareTag(BORDER_TAG))&#32;SwitchAggro();
<anchor xml:id="__enemy_controller_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_timeOfLastTrigger&#32;=&#32;Time.time;
<anchor xml:id="__enemy_controller_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Public&#32;Methods&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00105"/>00105 
<anchor xml:id="__enemy_controller_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TakeDamage(<emphasis role="keywordtype">int</emphasis>&#32;damage,&#32;GameObject&#32;damageSource)
<anchor xml:id="__enemy_controller_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isActiveAndEnabled)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00114"/>00114 
<anchor xml:id="__enemy_controller_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onTakesHitEvent?.Invoke(damageSource);
<anchor xml:id="__enemy_controller_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentHealth&#32;-=&#32;damage;
<anchor xml:id="__enemy_controller_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_currentHealth&#32;&lt;=&#32;0)&#32;Die();
<anchor xml:id="__enemy_controller_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00119"/>00119 
<anchor xml:id="__enemy_controller_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;-----------------&#32;Private&#32;Methods&#32;-----------------&#32;*/</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnProjectileCollision(GameObject&#32;projectile)
<anchor xml:id="__enemy_controller_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectileScript&#32;=&#32;projectile.GetComponent&lt;<link linkend="_class_spawnables_1_1_weapons_1_1_projectile">Projectile</link>&gt;();
<anchor xml:id="__enemy_controller_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TakeDamage(projectileScript.damage,&#32;projectile);
<anchor xml:id="__enemy_controller_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_spawnables_1_1_object_pool_manager">ObjectPoolManager</link>.<link linkend="_class_spawnables_1_1_object_pool_manager_1a6bbeac8b46389ccaa0b7d2d24f805c6f">Despawn</link>(projectile);
<anchor xml:id="__enemy_controller_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00128"/>00128 
<anchor xml:id="__enemy_controller_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Changes&#32;the&#32;enemy&apos;s&#32;aggro&#32;state&#32;and&#32;notifies&#32;the&#32;weapon</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SwitchAggro()
<anchor xml:id="__enemy_controller_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weapon&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasAggro&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;weapon.HasAggro&#32;=&#32;hasAggro;
<anchor xml:id="__enemy_controller_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00136"/>00136 
<anchor xml:id="__enemy_controller_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotates&#32;the&#32;enemy&#32;towards&#32;the&#32;player&apos;s&#32;current&#32;position</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RotateTowardsPlayer()
<anchor xml:id="__enemy_controller_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;playerPosition&#32;=&#32;<link linkend="_class_player_scripts_1_1_player">Player</link>.<link linkend="_class_player_scripts_1_1_player_1a7fdf773501c77d7fe9587f9cafffee5f">Instance</link>.transform.position;
<anchor xml:id="__enemy_controller_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;currentRotation&#32;&#32;=&#32;transform.rotation;
<anchor xml:id="__enemy_controller_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;targetRotation&#32;=&#32;Quaternion.LookRotation(Vector3.forward,&#32;playerPosition&#32;-&#32;transform.position);
<anchor xml:id="__enemy_controller_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;Quaternion.RotateTowards(currentRotation,&#32;targetRotation,&#32;360&#32;*&#32;Time.deltaTime);
<anchor xml:id="__enemy_controller_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00146"/>00146 
<anchor xml:id="__enemy_controller_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Despawns&#32;the&#32;enemy&#32;and&#32;awards&#32;player&#32;with&#32;score&#32;and&#32;loot</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Die()
<anchor xml:id="__enemy_controller_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DropLoot();
<anchor xml:id="__enemy_controller_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasAggro&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_scripts_1_1_player_status">PlayerStatus</link>.<link linkend="_class_player_scripts_1_1_player_status_1aeac2eae8e304f20bc75eb574b2df8964">Instance</link>.<link linkend="_class_player_scripts_1_1_player_status_1ab2e34c964f801ca064cdcd5aaf430c45">ChangeScore</link>(_enemyVariables.scoreReward);
<anchor xml:id="__enemy_controller_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_spawnables_1_1_object_pool_manager">ObjectPoolManager</link>.<link linkend="_class_spawnables_1_1_object_pool_manager_1a6bbeac8b46389ccaa0b7d2d24f805c6f">Despawn</link>(gameObject);
<anchor xml:id="__enemy_controller_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onDeathEvent?.Invoke();
<anchor xml:id="__enemy_controller_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00157"/>00157 
<anchor xml:id="__enemy_controller_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Has&#32;a&#32;chance&#32;to&#32;drop&#32;each&#32;of&#32;the&#32;loot&#32;items&#32;on&#32;a&#32;random&#32;position&#32;around&#32;the&#32;enemy.&#32;</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DropLoot()
<anchor xml:id="__enemy_controller_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;drop&#32;<emphasis role="keywordflow">in</emphasis>&#32;_enemyVariables.drops)
<anchor xml:id="__enemy_controller_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;drop.maxDrops;&#32;i++)
<anchor xml:id="__enemy_controller_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;roll&#32;=&#32;UnityEngine.Random.insideUnitCircle;
<anchor xml:id="__enemy_controller_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Mathf.Abs(roll.x)&#32;&gt;=&#32;drop.dropChance)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__enemy_controller_8cs_source_1l00167"/>00167 
<anchor xml:id="__enemy_controller_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normalize&#32;x&#32;into&#32;range&#32;from&#32;-1&#32;to&#32;1</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roll.x&#32;=&#32;(roll.x&#32;-&#32;drop.dropChance)&#32;/&#32;(1&#32;-&#32;drop.dropChance);
<anchor xml:id="__enemy_controller_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_spawnables_1_1_object_pool_manager">ObjectPoolManager</link>.Spawn&lt;<link linkend="_class_spawnables_1_1_pickups_1_1_pickup">Pickup</link>&gt;(drop.item,&#32;transform.position&#32;+&#32;roll,&#32;Quaternion.identity);
<anchor xml:id="__enemy_controller_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;
<anchor xml:id="__enemy_controller_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Deals&#32;damage&#32;to&#32;the&#32;enemy&#32;on&#32;BombController&apos;s&#32;damage&#32;ticks</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnBombDamageTick(<emphasis role="keywordtype">int</emphasis>&#32;damage)
<anchor xml:id="__enemy_controller_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TakeDamage(damage,&#32;<link linkend="_class_player_scripts_1_1_player">Player</link>.<link linkend="_class_player_scripts_1_1_player_1a7fdf773501c77d7fe9587f9cafffee5f">Instance</link>.gameObject);
<anchor xml:id="__enemy_controller_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00181"/>00181 
<anchor xml:id="__enemy_controller_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unsubscribes&#32;from&#32;BombController&apos;s&#32;damage&#32;ticks</emphasis>
<anchor xml:id="__enemy_controller_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()
<anchor xml:id="__enemy_controller_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__enemy_controller_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BombController.OnBombDamageTick&#32;-=&#32;OnBombDamageTick;
<anchor xml:id="__enemy_controller_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;}
<anchor xml:id="__enemy_controller_8cs_source_1l00188"/>00188 }
</programlisting></section>
