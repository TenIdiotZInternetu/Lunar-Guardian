<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__bezier_path_8cs_source" xml:lang="en-US">
<title>BezierPath.cs</title>
<indexterm><primary>Tools/PathCreator/Core/Runtime/Objects/BezierPath.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__bezier_path_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__bezier_path_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Linq;
<anchor xml:id="__bezier_path_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_path_creation_1_1_utility">PathCreation.Utility</link>;
<anchor xml:id="__bezier_path_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__bezier_path_8cs_source_1l00005"/>00005 
<anchor xml:id="__bezier_path_8cs_source_1l00006"/><link linkend="_namespace_path_creation">00006</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_path_creation">PathCreation</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00010"/>00010 
<anchor xml:id="__bezier_path_8cs_source_1l00013"/>00013 
<anchor xml:id="__bezier_path_8cs_source_1l00016"/>00016 
<anchor xml:id="__bezier_path_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__bezier_path_8cs_source_1l00018"/><link linkend="_class_path_creation_1_1_bezier_path">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">event</emphasis>&#32;System.Action&#32;OnModified;
<anchor xml:id="__bezier_path_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;ControlMode&#32;{&#32;Aligned,&#32;Mirrored,&#32;Free,&#32;Automatic&#32;};
<anchor xml:id="__bezier_path_8cs_source_1l00021"/>00021 
<anchor xml:id="__bezier_path_8cs_source_1l00022"/>00022 <emphasis role="preprocessor">&#32;#region&#32;Fields</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00023"/>00023 
<anchor xml:id="__bezier_path_8cs_source_1l00024"/>00024 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00025"/>00025 &#32;List&lt;Vector3&gt;&#32;points;
<anchor xml:id="__bezier_path_8cs_source_1l00026"/>00026 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00027"/>00027 &#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed;
<anchor xml:id="__bezier_path_8cs_source_1l00028"/>00028 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00029"/>00029 &#32;PathSpace&#32;space;
<anchor xml:id="__bezier_path_8cs_source_1l00030"/>00030 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00031"/>00031 &#32;ControlMode&#32;controlMode;
<anchor xml:id="__bezier_path_8cs_source_1l00032"/>00032 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00033"/>00033 &#32;<emphasis role="keywordtype">float</emphasis>&#32;autoControlLength&#32;=&#32;.3f;
<anchor xml:id="__bezier_path_8cs_source_1l00034"/>00034 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00035"/>00035 &#32;<emphasis role="keywordtype">bool</emphasis>&#32;boundsUpToDate;
<anchor xml:id="__bezier_path_8cs_source_1l00036"/>00036 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00037"/>00037 &#32;Bounds&#32;bounds;
<anchor xml:id="__bezier_path_8cs_source_1l00038"/>00038 
<anchor xml:id="__bezier_path_8cs_source_1l00039"/>00039 &#32;<emphasis role="comment">//&#32;Normals&#32;settings</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00040"/>00040 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00041"/>00041 &#32;List&lt;float&gt;&#32;perAnchorNormalsAngle;
<anchor xml:id="__bezier_path_8cs_source_1l00042"/>00042 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00043"/>00043 &#32;<emphasis role="keywordtype">float</emphasis>&#32;globalNormalsAngle;
<anchor xml:id="__bezier_path_8cs_source_1l00044"/>00044 &#32;[SerializeField,&#32;HideInInspector]
<anchor xml:id="__bezier_path_8cs_source_1l00045"/>00045 &#32;<emphasis role="keywordtype">bool</emphasis>&#32;flipNormals;
<anchor xml:id="__bezier_path_8cs_source_1l00046"/>00046 
<anchor xml:id="__bezier_path_8cs_source_1l00047"/>00047 <emphasis role="preprocessor">&#32;#endregion</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00048"/>00048 
<anchor xml:id="__bezier_path_8cs_source_1l00049"/>00049 <emphasis role="preprocessor">&#32;#region&#32;Constructors</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00050"/>00050 
<anchor xml:id="__bezier_path_8cs_source_1l00054"/><link linkend="_class_path_creation_1_1_bezier_path_1abc1cd71906862025c18067de4ac55fcd">00054</link> &#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1abc1cd71906862025c18067de4ac55fcd">BezierPath</link>&#32;(Vector3&#32;centre,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;PathSpace&#32;space&#32;=&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00055"/>00055 
<anchor xml:id="__bezier_path_8cs_source_1l00056"/>00056 &#32;Vector3&#32;dir&#32;=&#32;(space&#32;==&#32;PathSpace.xz)&#32;?&#32;Vector3.forward&#32;:&#32;Vector3.up;
<anchor xml:id="__bezier_path_8cs_source_1l00057"/>00057 &#32;<emphasis role="keywordtype">float</emphasis>&#32;width&#32;=&#32;2;
<anchor xml:id="__bezier_path_8cs_source_1l00058"/>00058 &#32;<emphasis role="keywordtype">float</emphasis>&#32;controlHeight&#32;=&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00059"/>00059 &#32;<emphasis role="keywordtype">float</emphasis>&#32;controlWidth&#32;=&#32;1f;
<anchor xml:id="__bezier_path_8cs_source_1l00060"/>00060 &#32;points&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Vector3&gt;&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00061"/>00061 &#32;centre&#32;+&#32;Vector3.left&#32;*&#32;width,
<anchor xml:id="__bezier_path_8cs_source_1l00062"/>00062 &#32;centre&#32;+&#32;Vector3.left&#32;*&#32;controlWidth&#32;+&#32;dir&#32;*&#32;controlHeight,
<anchor xml:id="__bezier_path_8cs_source_1l00063"/>00063 &#32;centre&#32;+&#32;Vector3.right&#32;*&#32;controlWidth&#32;-&#32;dir&#32;*&#32;controlHeight,
<anchor xml:id="__bezier_path_8cs_source_1l00064"/>00064 &#32;centre&#32;+&#32;Vector3.right&#32;*&#32;width
<anchor xml:id="__bezier_path_8cs_source_1l00065"/>00065 &#32;};
<anchor xml:id="__bezier_path_8cs_source_1l00066"/>00066 
<anchor xml:id="__bezier_path_8cs_source_1l00067"/>00067 &#32;perAnchorNormalsAngle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;float&gt;&#32;()&#32;{&#32;0,&#32;0&#32;};
<anchor xml:id="__bezier_path_8cs_source_1l00068"/>00068 
<anchor xml:id="__bezier_path_8cs_source_1l00069"/>00069 &#32;<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>&#32;=&#32;space;
<anchor xml:id="__bezier_path_8cs_source_1l00070"/>00070 &#32;<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>&#32;=&#32;isClosed;
<anchor xml:id="__bezier_path_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00072"/>00072 
<anchor xml:id="__bezier_path_8cs_source_1l00077"/><link linkend="_class_path_creation_1_1_bezier_path_1a86aae663e474da906ba3da4eff2b35f9">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a86aae663e474da906ba3da4eff2b35f9">BezierPath</link>&#32;(IEnumerable&lt;Vector3&gt;&#32;points,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;PathSpace&#32;space&#32;=&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;pointsArray&#32;=&#32;points.ToArray&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00079"/>00079 
<anchor xml:id="__bezier_path_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pointsArray.Length&#32;&lt;&#32;2)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError&#32;(<emphasis role="stringliteral">&quot;Path&#32;requires&#32;at&#32;least&#32;2&#32;anchor&#32;points.&quot;</emphasis>);
<anchor xml:id="__bezier_path_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controlMode&#32;=&#32;ControlMode.Automatic;
<anchor xml:id="__bezier_path_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.points&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Vector3&gt;&#32;{&#32;pointsArray[0],&#32;Vector3.zero,&#32;Vector3.zero,&#32;pointsArray[1]&#32;};
<anchor xml:id="__bezier_path_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;float&gt;&#32;(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;{&#32;0,&#32;0&#32;});
<anchor xml:id="__bezier_path_8cs_source_1l00086"/>00086 
<anchor xml:id="__bezier_path_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;2;&#32;i&#32;&lt;&#32;pointsArray.Length;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ab12baf2f95b49820320320618b733948">AddSegmentToEnd</link>&#32;(pointsArray[i]);
<anchor xml:id="__bezier_path_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle.Add&#32;(0);
<anchor xml:id="__bezier_path_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00092"/>00092 
<anchor xml:id="__bezier_path_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Space&#32;=&#32;space;
<anchor xml:id="__bezier_path_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.IsClosed&#32;=&#32;isClosed;
<anchor xml:id="__bezier_path_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00096"/>00096 
<anchor xml:id="__bezier_path_8cs_source_1l00101"/><link linkend="_class_path_creation_1_1_bezier_path_1a7850bd613d1984e910404cb7887f6d07">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a7850bd613d1984e910404cb7887f6d07">BezierPath</link>&#32;(IEnumerable&lt;Vector2&gt;&#32;transforms,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;PathSpace&#32;space&#32;=&#32;PathSpace.xy):
<anchor xml:id="__bezier_path_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;(transforms.Select&#32;(p&#32;=&gt;&#32;new&#32;Vector3&#32;(p.x,&#32;p.y)),&#32;isClosed,&#32;space)&#32;{&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00103"/>00103 
<anchor xml:id="__bezier_path_8cs_source_1l00108"/><link linkend="_class_path_creation_1_1_bezier_path_1a2dca585e9b7ab2d6de263f9ee94d0075">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2dca585e9b7ab2d6de263f9ee94d0075">BezierPath</link>&#32;(IEnumerable&lt;Transform&gt;&#32;transforms,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;PathSpace&#32;space&#32;=&#32;PathSpace.xy):
<anchor xml:id="__bezier_path_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;(transforms.Select&#32;(t&#32;=&gt;&#32;t.position),&#32;isClosed,&#32;space)&#32;{&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00110"/>00110 
<anchor xml:id="__bezier_path_8cs_source_1l00115"/><link linkend="_class_path_creation_1_1_bezier_path_1a72ed8d4817462c4937e638d5f136dd07">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a72ed8d4817462c4937e638d5f136dd07">BezierPath</link>&#32;(IEnumerable&lt;Vector2&gt;&#32;points,&#32;PathSpace&#32;space&#32;=&#32;PathSpace.xyz,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isClosed&#32;=&#32;<emphasis role="keyword">false</emphasis>):
<anchor xml:id="__bezier_path_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;(points.Select&#32;(p&#32;=&gt;&#32;new&#32;Vector3&#32;(p.x,&#32;p.y)),&#32;isClosed,&#32;space)&#32;{&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00117"/>00117 
<anchor xml:id="__bezier_path_8cs_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00119"/>00119 
<anchor xml:id="__bezier_path_8cs_source_1l00120"/>00120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Public&#32;methods&#32;and&#32;accessors</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00121"/>00121 
<anchor xml:id="__bezier_path_8cs_source_1l00123"/><link linkend="_class_path_creation_1_1_bezier_path_1ad43c2ada379c61ab862f177c8505ace8">00123</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<emphasis role="keyword">this</emphasis>&#32;[<emphasis role="keywordtype">int</emphasis>&#32;i]&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a4738362b3efc98a1c60a825b306a0892">GetPoint</link>&#32;(i);
<anchor xml:id="__bezier_path_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00128"/>00128 
<anchor xml:id="__bezier_path_8cs_source_1l00130"/><link linkend="_class_path_creation_1_1_bezier_path_1a4738362b3efc98a1c60a825b306a0892">00130</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a4738362b3efc98a1c60a825b306a0892">GetPoint</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points[i];
<anchor xml:id="__bezier_path_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00133"/>00133 
<anchor xml:id="__bezier_path_8cs_source_1l00135"/><link linkend="_class_path_creation_1_1_bezier_path_1a0d06f4dbe40cd7406bb66226b1b2a248">00135</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a0d06f4dbe40cd7406bb66226b1b2a248">SetPoint</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;Vector3&#32;localPosition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;suppressPathModifiedEvent&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;localPosition;
<anchor xml:id="__bezier_path_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!suppressPathModifiedEvent)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified();
<anchor xml:id="__bezier_path_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00141"/>00141 
<anchor xml:id="__bezier_path_8cs_source_1l00143"/><link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points.Count;
<anchor xml:id="__bezier_path_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00148"/>00148 
<anchor xml:id="__bezier_path_8cs_source_1l00150"/><link linkend="_class_path_creation_1_1_bezier_path_1a7faf89e9e535007f3f491d54c26efe60">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a7faf89e9e535007f3f491d54c26efe60">NumAnchorPoints</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>)&#32;?&#32;points.Count&#32;/&#32;3&#32;:&#32;(points.Count&#32;+&#32;2)&#32;/&#32;3;
<anchor xml:id="__bezier_path_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00155"/>00155 
<anchor xml:id="__bezier_path_8cs_source_1l00157"/><link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points.Count&#32;/&#32;3;
<anchor xml:id="__bezier_path_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00162"/>00162 
<anchor xml:id="__bezier_path_8cs_source_1l00165"/><link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PathSpace&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;space;
<anchor xml:id="__bezier_path_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;space)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathSpace&#32;previousSpace&#32;=&#32;space;
<anchor xml:id="__bezier_path_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;space&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ac584b000da2691b488b51416e1fb4a66">UpdateToNewPathSpace</link>&#32;(previousSpace);
<anchor xml:id="__bezier_path_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00177"/>00177 
<anchor xml:id="__bezier_path_8cs_source_1l00179"/><link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">00179</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isClosed;
<anchor xml:id="__bezier_path_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed&#32;!=&#32;value)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isClosed&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a95b2dd724116a5cdfd043b44fe396a5c">UpdateClosedState</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00190"/>00190 
<anchor xml:id="__bezier_path_8cs_source_1l00197"/><link linkend="_class_path_creation_1_1_bezier_path_1a16552136821334ce771512319d7be9f4">00197</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ControlMode&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a16552136821334ce771512319d7be9f4">ControlPointMode</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;controlMode;
<anchor xml:id="__bezier_path_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;!=&#32;value)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controlMode&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6707c57f434f60dc9f14e80907d01ee5">AutoSetAllControlPoints</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00211"/>00211 
<anchor xml:id="__bezier_path_8cs_source_1l00213"/><link linkend="_class_path_creation_1_1_bezier_path_1ad77316d5b3c1726244503f8b2540fe2d">00213</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad77316d5b3c1726244503f8b2540fe2d">AutoControlLength</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;autoControlLength;
<anchor xml:id="__bezier_path_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;Mathf.Max&#32;(value,&#32;.01f);
<anchor xml:id="__bezier_path_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(autoControlLength&#32;!=&#32;value)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;autoControlLength&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6707c57f434f60dc9f14e80907d01ee5">AutoSetAllControlPoints</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00226"/>00226 
<anchor xml:id="__bezier_path_8cs_source_1l00228"/><link linkend="_class_path_creation_1_1_bezier_path_1ab12baf2f95b49820320320618b733948">00228</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ab12baf2f95b49820320320618b733948">AddSegmentToEnd</link>&#32;(Vector3&#32;anchorPos)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__bezier_path_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00232"/>00232 
<anchor xml:id="__bezier_path_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastAnchorIndex&#32;=&#32;points.Count&#32;-&#32;1;
<anchor xml:id="__bezier_path_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;position&#32;for&#32;new&#32;control&#32;to&#32;be&#32;mirror&#32;of&#32;its&#32;counterpart</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;secondControlForOldLastAnchorOffset&#32;=&#32;(points[lastAnchorIndex]&#32;-&#32;points[lastAnchorIndex&#32;-&#32;1]);
<anchor xml:id="__bezier_path_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;!=&#32;ControlMode.Mirrored&#32;&amp;&amp;&#32;controlMode&#32;!=&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;position&#32;for&#32;new&#32;control&#32;to&#32;be&#32;aligned&#32;with&#32;its&#32;counterpart,&#32;but&#32;with&#32;a&#32;length&#32;of&#32;half&#32;the&#32;distance&#32;from&#32;prev&#32;to&#32;new&#32;anchor</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstPrevToNewAnchor&#32;=&#32;(points[lastAnchorIndex]&#32;-&#32;anchorPos).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;secondControlForOldLastAnchorOffset&#32;=&#32;(points[lastAnchorIndex]&#32;-&#32;points[lastAnchorIndex&#32;-&#32;1]).normalized&#32;*&#32;dstPrevToNewAnchor&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;secondControlForOldLastAnchor&#32;=&#32;points[lastAnchorIndex]&#32;+&#32;secondControlForOldLastAnchorOffset;
<anchor xml:id="__bezier_path_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;controlForNewAnchor&#32;=&#32;(anchorPos&#32;+&#32;secondControlForOldLastAnchor)&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00243"/>00243 
<anchor xml:id="__bezier_path_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Add&#32;(secondControlForOldLastAnchor);
<anchor xml:id="__bezier_path_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Add&#32;(controlForNewAnchor);
<anchor xml:id="__bezier_path_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Add&#32;(anchorPos);
<anchor xml:id="__bezier_path_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle.Add&#32;(perAnchorNormalsAngle[perAnchorNormalsAngle.Count&#32;-&#32;1]);
<anchor xml:id="__bezier_path_8cs_source_1l00248"/>00248 
<anchor xml:id="__bezier_path_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">AutoSetAllAffectedControlPoints</link>&#32;(points.Count&#32;-&#32;1);
<anchor xml:id="__bezier_path_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00252"/>00252 
<anchor xml:id="__bezier_path_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00255"/>00255 
<anchor xml:id="__bezier_path_8cs_source_1l00257"/><link linkend="_class_path_creation_1_1_bezier_path_1ab9657215c02544661b55b75f2e9e0867">00257</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ab9657215c02544661b55b75f2e9e0867">AddSegmentToStart</link>&#32;(Vector3&#32;anchorPos)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__bezier_path_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00261"/>00261 
<anchor xml:id="__bezier_path_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;position&#32;for&#32;new&#32;control&#32;to&#32;be&#32;mirror&#32;of&#32;its&#32;counterpart</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;secondControlForOldFirstAnchorOffset&#32;=&#32;(points[0]&#32;-&#32;points[1]);
<anchor xml:id="__bezier_path_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;!=&#32;ControlMode.Mirrored&#32;&amp;&amp;&#32;controlMode&#32;!=&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;position&#32;for&#32;new&#32;control&#32;to&#32;be&#32;aligned&#32;with&#32;its&#32;counterpart,&#32;but&#32;with&#32;a&#32;length&#32;of&#32;half&#32;the&#32;distance&#32;from&#32;prev&#32;to&#32;new&#32;anchor</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstPrevToNewAnchor&#32;=&#32;(points[0]&#32;-&#32;anchorPos).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;secondControlForOldFirstAnchorOffset&#32;=&#32;secondControlForOldFirstAnchorOffset.normalized&#32;*&#32;dstPrevToNewAnchor&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00269"/>00269 
<anchor xml:id="__bezier_path_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;secondControlForOldFirstAnchor&#32;=&#32;points[0]&#32;+&#32;secondControlForOldFirstAnchorOffset;
<anchor xml:id="__bezier_path_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;controlForNewAnchor&#32;=&#32;(anchorPos&#32;+&#32;secondControlForOldFirstAnchor)&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Insert&#32;(0,&#32;anchorPos);
<anchor xml:id="__bezier_path_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Insert&#32;(1,&#32;controlForNewAnchor);
<anchor xml:id="__bezier_path_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Insert&#32;(2,&#32;secondControlForOldFirstAnchor);
<anchor xml:id="__bezier_path_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle.Insert&#32;(0,&#32;perAnchorNormalsAngle[0]);
<anchor xml:id="__bezier_path_8cs_source_1l00276"/>00276 
<anchor xml:id="__bezier_path_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">AutoSetAllAffectedControlPoints</link>&#32;(0);
<anchor xml:id="__bezier_path_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00282"/>00282 
<anchor xml:id="__bezier_path_8cs_source_1l00284"/><link linkend="_class_path_creation_1_1_bezier_path_1a33b79a7b74d774133da2f4abc0440bf3">00284</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a33b79a7b74d774133da2f4abc0440bf3">SplitSegment</link>&#32;(Vector3&#32;anchorPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;segmentIndex,&#32;<emphasis role="keywordtype">float</emphasis>&#32;splitTime)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;splitTime&#32;=&#32;Mathf.Clamp01&#32;(splitTime);
<anchor xml:id="__bezier_path_8cs_source_1l00286"/>00286 
<anchor xml:id="__bezier_path_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.InsertRange&#32;(segmentIndex&#32;*&#32;3&#32;+&#32;2,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[]&#32;{&#32;Vector3.zero,&#32;anchorPos,&#32;Vector3.zero&#32;});
<anchor xml:id="__bezier_path_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">AutoSetAllAffectedControlPoints</link>&#32;(segmentIndex&#32;*&#32;3&#32;+&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Split&#32;the&#32;curve&#32;to&#32;find&#32;where&#32;control&#32;points&#32;can&#32;be&#32;inserted&#32;to&#32;least&#32;affect&#32;shape&#32;of&#32;curve</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Curve&#32;will&#32;probably&#32;be&#32;deformed&#32;slightly&#32;since&#32;splitTime&#32;is&#32;only&#32;an&#32;estimate&#32;(for&#32;performance&#32;reasons,&#32;and&#32;so&#32;doesn&apos;t&#32;correspond&#32;exactly&#32;with&#32;anchorPos)</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[][]&#32;splitSegment&#32;=&#32;CubicBezierUtility.SplitCurve&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a6185499e7da708f8fb6e99f698436d36">GetPointsInSegment</link>&#32;(segmentIndex),&#32;splitTime);
<anchor xml:id="__bezier_path_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.InsertRange&#32;(segmentIndex&#32;*&#32;3&#32;+&#32;2,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[]&#32;{&#32;splitSegment[0][2],&#32;splitSegment[1][0],&#32;splitSegment[1][1]&#32;});
<anchor xml:id="__bezier_path_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newAnchorIndex&#32;=&#32;segmentIndex&#32;*&#32;3&#32;+&#32;3;
<anchor xml:id="__bezier_path_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">MovePoint</link>&#32;(newAnchorIndex&#32;-&#32;2,&#32;splitSegment[0][1],&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__bezier_path_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">MovePoint</link>&#32;(newAnchorIndex&#32;+&#32;2,&#32;splitSegment[1][2],&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__bezier_path_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">MovePoint</link>&#32;(newAnchorIndex,&#32;anchorPos,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__bezier_path_8cs_source_1l00299"/>00299 
<anchor xml:id="__bezier_path_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Mirrored)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;avgDst&#32;=&#32;((splitSegment[0][2]&#32;-&#32;anchorPos).magnitude&#32;+&#32;(splitSegment[1][1]&#32;-&#32;anchorPos).magnitude)&#32;/&#32;2;
<anchor xml:id="__bezier_path_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">MovePoint</link>&#32;(newAnchorIndex&#32;+&#32;1,&#32;anchorPos&#32;+&#32;(splitSegment[1][1]&#32;-&#32;anchorPos).normalized&#32;*&#32;avgDst,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__bezier_path_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00305"/>00305 
<anchor xml:id="__bezier_path_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insert&#32;angle&#32;for&#32;new&#32;anchor&#32;(value&#32;should&#32;be&#32;set&#32;inbetween&#32;neighbour&#32;anchor&#32;angles)</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newAnchorAngleIndex&#32;=&#32;(segmentIndex&#32;+&#32;1)&#32;%&#32;perAnchorNormalsAngle.Count;
<anchor xml:id="__bezier_path_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numAngles&#32;=&#32;perAnchorNormalsAngle.Count;
<anchor xml:id="__bezier_path_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;anglePrev&#32;=&#32;perAnchorNormalsAngle[segmentIndex];
<anchor xml:id="__bezier_path_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleNext&#32;=&#32;perAnchorNormalsAngle[newAnchorAngleIndex];
<anchor xml:id="__bezier_path_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;splitAngle&#32;=&#32;Mathf.LerpAngle&#32;(anglePrev,&#32;angleNext,&#32;splitTime);
<anchor xml:id="__bezier_path_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle.Insert&#32;(newAnchorAngleIndex,&#32;splitAngle);
<anchor xml:id="__bezier_path_8cs_source_1l00313"/>00313 
<anchor xml:id="__bezier_path_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00316"/>00316 
<anchor xml:id="__bezier_path_8cs_source_1l00318"/><link linkend="_class_path_creation_1_1_bezier_path_1ab53e85db248fb10680799c89cef3ad89">00318</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ab53e85db248fb10680799c89cef3ad89">DeleteSegment</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;anchorIndex)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;delete&#32;segment&#32;if&#32;its&#32;the&#32;last&#32;one&#32;remaining&#32;(or&#32;if&#32;only&#32;two&#32;segments&#32;in&#32;a&#32;closed&#32;path)</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>&#32;&gt;&#32;2&#32;||&#32;!isClosed&#32;&amp;&amp;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>&#32;&gt;&#32;1)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anchorIndex&#32;==&#32;0)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Count&#32;-&#32;1]&#32;=&#32;points[2];
<anchor xml:id="__bezier_path_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.RemoveRange&#32;(0,&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anchorIndex&#32;==&#32;points.Count&#32;-&#32;1&#32;&amp;&amp;&#32;!isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.RemoveRange&#32;(anchorIndex&#32;-&#32;2,&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.RemoveRange&#32;(anchorIndex&#32;-&#32;1,&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00331"/>00331 
<anchor xml:id="__bezier_path_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle.RemoveAt&#32;(anchorIndex&#32;/&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00333"/>00333 
<anchor xml:id="__bezier_path_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6707c57f434f60dc9f14e80907d01ee5">AutoSetAllControlPoints</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00337"/>00337 
<anchor xml:id="__bezier_path_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00341"/>00341 
<anchor xml:id="__bezier_path_8cs_source_1l00343"/><link linkend="_class_path_creation_1_1_bezier_path_1a6185499e7da708f8fb6e99f698436d36">00343</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3[]&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6185499e7da708f8fb6e99f698436d36">GetPointsInSegment</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;segmentIndex)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;segmentIndex&#32;=&#32;Mathf.Clamp&#32;(segmentIndex,&#32;0,&#32;<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>&#32;-&#32;1);
<anchor xml:id="__bezier_path_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[]&#32;{&#32;<emphasis role="keyword">this</emphasis>&#32;[segmentIndex&#32;*&#32;3],&#32;<emphasis role="keyword">this</emphasis>&#32;[segmentIndex&#32;*&#32;3&#32;+&#32;1],&#32;<emphasis role="keyword">this</emphasis>&#32;[segmentIndex&#32;*&#32;3&#32;+&#32;2],&#32;<emphasis role="keyword">this</emphasis>&#32;[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(segmentIndex&#32;*&#32;3&#32;+&#32;3)]&#32;};
<anchor xml:id="__bezier_path_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00347"/>00347 
<anchor xml:id="__bezier_path_8cs_source_1l00349"/><link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">00349</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad80661af25a34919eeba7403348fd75f">MovePoint</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;Vector3&#32;pointPos,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;suppressPathModifiedEvent&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00350"/>00350 
<anchor xml:id="__bezier_path_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xy)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointPos.z&#32;=&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pointPos.y&#32;=&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;deltaMove&#32;=&#32;pointPos&#32;-&#32;points[i];
<anchor xml:id="__bezier_path_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isAnchorPoint&#32;=&#32;i&#32;%&#32;3&#32;==&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00358"/>00358 
<anchor xml:id="__bezier_path_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;process&#32;control&#32;point&#32;if&#32;control&#32;mode&#32;is&#32;set&#32;to&#32;automatic</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isAnchorPoint&#32;||&#32;controlMode&#32;!=&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;pointPos;
<anchor xml:id="__bezier_path_8cs_source_1l00362"/>00362 
<anchor xml:id="__bezier_path_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">AutoSetAllAffectedControlPoints</link>&#32;(i);
<anchor xml:id="__bezier_path_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;control&#32;points&#32;with&#32;anchor&#32;point</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isAnchorPoint)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;+&#32;1&#32;&lt;&#32;points.Count&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(i&#32;+&#32;1)]&#32;+=&#32;deltaMove;
<anchor xml:id="__bezier_path_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;-&#32;1&#32;&gt;=&#32;0&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(i&#32;-&#32;1)]&#32;+=&#32;deltaMove;
<anchor xml:id="__bezier_path_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;not&#32;in&#32;free&#32;control&#32;mode,&#32;then&#32;move&#32;attached&#32;control&#32;point&#32;to&#32;be&#32;aligned/mirrored&#32;(depending&#32;on&#32;mode)</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;!=&#32;ControlMode.Free)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nextPointIsAnchor&#32;=&#32;(i&#32;+&#32;1)&#32;%&#32;3&#32;==&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;attachedControlIndex&#32;=&#32;(nextPointIsAnchor)&#32;?&#32;i&#32;+&#32;2&#32;:&#32;i&#32;-&#32;2;
<anchor xml:id="__bezier_path_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;anchorIndex&#32;=&#32;(nextPointIsAnchor)&#32;?&#32;i&#32;+&#32;1&#32;:&#32;i&#32;-&#32;1;
<anchor xml:id="__bezier_path_8cs_source_1l00380"/>00380 
<anchor xml:id="__bezier_path_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attachedControlIndex&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;attachedControlIndex&#32;&lt;&#32;points.Count&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceFromAnchor&#32;=&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;in&#32;aligned&#32;mode,&#32;then&#32;attached&#32;control&apos;s&#32;current&#32;distance&#32;from&#32;anchor&#32;point&#32;should&#32;be&#32;maintained</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Aligned)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distanceFromAnchor&#32;=&#32;(points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex)]&#32;-&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(attachedControlIndex)]).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;in&#32;mirrored&#32;mode,&#32;then&#32;both&#32;control&#32;points&#32;should&#32;have&#32;the&#32;same&#32;distance&#32;from&#32;the&#32;anchor&#32;point</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Mirrored)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distanceFromAnchor&#32;=&#32;(points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex)]&#32;-&#32;points[i]).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00390"/>00390 
<anchor xml:id="__bezier_path_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;dir&#32;=&#32;(points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex)]&#32;-&#32;pointPos).normalized;
<anchor xml:id="__bezier_path_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(attachedControlIndex)]&#32;=&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex)]&#32;+&#32;dir&#32;*&#32;distanceFromAnchor;
<anchor xml:id="__bezier_path_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00397"/>00397 
<anchor xml:id="__bezier_path_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!suppressPathModifiedEvent)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00403"/>00403 
<anchor xml:id="__bezier_path_8cs_source_1l00405"/><link linkend="_class_path_creation_1_1_bezier_path_1a5a1537c7d09255d14329cfe10d09ed41">00405</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Bounds&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a5a1537c7d09255d14329cfe10d09ed41">CalculateBoundsWithTransform</link>&#32;(Transform&#32;transform)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;through&#32;all&#32;segments&#32;and&#32;keep&#32;track&#32;of&#32;the&#32;minmax&#32;points&#32;of&#32;all&#32;their&#32;bounding&#32;boxes</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MinMax3D&#32;minMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;MinMax3D&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00408"/>00408 
<anchor xml:id="__bezier_path_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;p&#32;=&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6185499e7da708f8fb6e99f698436d36">GetPointsInSegment</link>&#32;(i);
<anchor xml:id="__bezier_path_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;p.Length;&#32;j++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p[j]&#32;=&#32;MathUtility.TransformPoint&#32;(p[j],&#32;transform,&#32;space);
<anchor xml:id="__bezier_path_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00414"/>00414 
<anchor xml:id="__bezier_path_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(p[0]);
<anchor xml:id="__bezier_path_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(p[3]);
<anchor xml:id="__bezier_path_8cs_source_1l00417"/>00417 
<anchor xml:id="__bezier_path_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;float&gt;&#32;extremePointTimes&#32;=&#32;CubicBezierUtility.ExtremePointTimes&#32;(p[0],&#32;p[1],&#32;p[2],&#32;p[3]);
<anchor xml:id="__bezier_path_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;extremePointTimes)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(CubicBezierUtility.EvaluateCurve&#32;(p,&#32;t));
<anchor xml:id="__bezier_path_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00423"/>00423 
<anchor xml:id="__bezier_path_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Bounds&#32;((minMax.Min&#32;+&#32;minMax.Max)&#32;/&#32;2,&#32;minMax.Max&#32;-&#32;minMax.Min);
<anchor xml:id="__bezier_path_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00426"/>00426 
<anchor xml:id="__bezier_path_8cs_source_1l00428"/><link linkend="_class_path_creation_1_1_bezier_path_1a4ef9d3ec8744096f518dc1a650fc26c1">00428</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a4ef9d3ec8744096f518dc1a650fc26c1">FlipNormals</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flipNormals;
<anchor xml:id="__bezier_path_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flipNormals&#32;!=&#32;value)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flipNormals&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00439"/>00439 
<anchor xml:id="__bezier_path_8cs_source_1l00441"/><link linkend="_class_path_creation_1_1_bezier_path_1abe9a53426b4002473d61f85798101296">00441</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1abe9a53426b4002473d61f85798101296">GlobalNormalsAngle</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;globalNormalsAngle;
<anchor xml:id="__bezier_path_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;globalNormalsAngle)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;globalNormalsAngle&#32;=&#32;value;
<anchor xml:id="__bezier_path_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00452"/>00452 
<anchor xml:id="__bezier_path_8cs_source_1l00454"/><link linkend="_class_path_creation_1_1_bezier_path_1a094e07c9b053cf728b73b31fd00369b7">00454</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a094e07c9b053cf728b73b31fd00369b7">GetAnchorNormalAngle</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;anchorIndex)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;perAnchorNormalsAngle[anchorIndex]&#32;%&#32;360;
<anchor xml:id="__bezier_path_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00457"/>00457 
<anchor xml:id="__bezier_path_8cs_source_1l00459"/><link linkend="_class_path_creation_1_1_bezier_path_1a65a9570a5f501aacc4571e247d3507c2">00459</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a65a9570a5f501aacc4571e247d3507c2">SetAnchorNormalAngle</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;anchorIndex,&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angle&#32;=&#32;(angle&#32;+&#32;360)&#32;%&#32;360;
<anchor xml:id="__bezier_path_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(perAnchorNormalsAngle[anchorIndex]&#32;!=&#32;angle)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle[anchorIndex]&#32;=&#32;angle;
<anchor xml:id="__bezier_path_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00466"/>00466 
<anchor xml:id="__bezier_path_8cs_source_1l00468"/><link linkend="_class_path_creation_1_1_bezier_path_1a612579356063be5d372a0db66a490299">00468</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a612579356063be5d372a0db66a490299">ResetNormalAngles</link>&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;perAnchorNormalsAngle.Count;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perAnchorNormalsAngle[i]&#32;=&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;globalNormalsAngle&#32;=&#32;0;
<anchor xml:id="__bezier_path_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00475"/>00475 
<anchor xml:id="__bezier_path_8cs_source_1l00477"/><link linkend="_class_path_creation_1_1_bezier_path_1a7a1adffc40fe07f5e2db82a63b6fb33a">00477</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Bounds&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a7a1adffc40fe07f5e2db82a63b6fb33a">PathBounds</link>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!boundsUpToDate)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a1db9cbd6086ef5b725ef6dca456b0dc5">UpdateBounds</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bounds;
<anchor xml:id="__bezier_path_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00485"/>00485 
<anchor xml:id="__bezier_path_8cs_source_1l00486"/>00486 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00487"/>00487 
<anchor xml:id="__bezier_path_8cs_source_1l00488"/>00488 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Internal&#32;methods&#32;and&#32;accessors</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00489"/>00489 
<anchor xml:id="__bezier_path_8cs_source_1l00491"/><link linkend="_class_path_creation_1_1_bezier_path_1a1db9cbd6086ef5b725ef6dca456b0dc5">00491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a1db9cbd6086ef5b725ef6dca456b0dc5">UpdateBounds</link>&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundsUpToDate)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__bezier_path_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00495"/>00495 
<anchor xml:id="__bezier_path_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;through&#32;all&#32;segments&#32;and&#32;keep&#32;track&#32;of&#32;the&#32;minmax&#32;points&#32;of&#32;all&#32;their&#32;bounding&#32;boxes</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MinMax3D&#32;minMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;MinMax3D&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00498"/>00498 
<anchor xml:id="__bezier_path_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;p&#32;=&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6185499e7da708f8fb6e99f698436d36">GetPointsInSegment</link>&#32;(i);
<anchor xml:id="__bezier_path_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(p[0]);
<anchor xml:id="__bezier_path_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(p[3]);
<anchor xml:id="__bezier_path_8cs_source_1l00503"/>00503 
<anchor xml:id="__bezier_path_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;float&gt;&#32;extremePointTimes&#32;=&#32;CubicBezierUtility.ExtremePointTimes&#32;(p[0],&#32;p[1],&#32;p[2],&#32;p[3]);
<anchor xml:id="__bezier_path_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;extremePointTimes)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minMax.AddValue&#32;(CubicBezierUtility.EvaluateCurve&#32;(p,&#32;t));
<anchor xml:id="__bezier_path_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00509"/>00509 
<anchor xml:id="__bezier_path_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsUpToDate&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__bezier_path_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Bounds&#32;((minMax.Min&#32;+&#32;minMax.Max)&#32;/&#32;2,&#32;minMax.Max&#32;-&#32;minMax.Min);
<anchor xml:id="__bezier_path_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00513"/>00513 
<anchor xml:id="__bezier_path_8cs_source_1l00515"/><link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">00515</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ad8df689d28cf8306e3ef28089427cb33">AutoSetAllAffectedControlPoints</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;updatedAnchorIndex)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;updatedAnchorIndex&#32;-&#32;3;&#32;i&#32;&lt;=&#32;updatedAnchorIndex&#32;+&#32;3;&#32;i&#32;+=&#32;3)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;i&#32;&lt;&#32;points.Count&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">AutoSetAnchorControlPoints</link>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(i));
<anchor xml:id="__bezier_path_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00521"/>00521 
<anchor xml:id="__bezier_path_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a8c68c9c40742ff4a0d07c23366083f27">AutoSetStartAndEndControls</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00524"/>00524 
<anchor xml:id="__bezier_path_8cs_source_1l00526"/><link linkend="_class_path_creation_1_1_bezier_path_1a6707c57f434f60dc9f14e80907d01ee5">00526</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a6707c57f434f60dc9f14e80907d01ee5">AutoSetAllControlPoints</link>&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a7faf89e9e535007f3f491d54c26efe60">NumAnchorPoints</link>&#32;&gt;&#32;2)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;points.Count;&#32;i&#32;+=&#32;3)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">AutoSetAnchorControlPoints</link>&#32;(i);
<anchor xml:id="__bezier_path_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00532"/>00532 
<anchor xml:id="__bezier_path_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a8c68c9c40742ff4a0d07c23366083f27">AutoSetStartAndEndControls</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00535"/>00535 
<anchor xml:id="__bezier_path_8cs_source_1l00537"/><link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">00537</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">AutoSetAnchorControlPoints</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;anchorIndex)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;a&#32;vector&#32;that&#32;is&#32;perpendicular&#32;to&#32;the&#32;vector&#32;bisecting&#32;the&#32;angle&#32;between&#32;this&#32;anchor&#32;and&#32;its&#32;two&#32;immediate&#32;neighbours</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;control&#32;points&#32;will&#32;be&#32;placed&#32;along&#32;that&#32;vector</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorPos&#32;=&#32;points[anchorIndex];
<anchor xml:id="__bezier_path_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;dir&#32;=&#32;Vector3.zero;
<anchor xml:id="__bezier_path_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;neighbourDistances&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[2];
<anchor xml:id="__bezier_path_8cs_source_1l00543"/>00543 
<anchor xml:id="__bezier_path_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anchorIndex&#32;-&#32;3&#32;&gt;=&#32;0&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;offset&#32;=&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex&#32;-&#32;3)]&#32;-&#32;anchorPos;
<anchor xml:id="__bezier_path_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dir&#32;+=&#32;offset.normalized;
<anchor xml:id="__bezier_path_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;neighbourDistances[0]&#32;=&#32;offset.magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anchorIndex&#32;+&#32;3&#32;&gt;=&#32;0&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;offset&#32;=&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(anchorIndex&#32;+&#32;3)]&#32;-&#32;anchorPos;
<anchor xml:id="__bezier_path_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dir&#32;-=&#32;offset.normalized;
<anchor xml:id="__bezier_path_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;neighbourDistances[1]&#32;=&#32;-offset.magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00554"/>00554 
<anchor xml:id="__bezier_path_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dir.Normalize&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00556"/>00556 
<anchor xml:id="__bezier_path_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;the&#32;control&#32;points&#32;along&#32;the&#32;calculated&#32;direction,&#32;with&#32;a&#32;distance&#32;proportional&#32;to&#32;the&#32;distance&#32;to&#32;the&#32;neighbouring&#32;control&#32;point</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;controlIndex&#32;=&#32;anchorIndex&#32;+&#32;i&#32;*&#32;2&#32;-&#32;1;
<anchor xml:id="__bezier_path_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlIndex&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;controlIndex&#32;&lt;&#32;points.Count&#32;||&#32;isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(controlIndex)]&#32;=&#32;anchorPos&#32;+&#32;dir&#32;*&#32;neighbourDistances[i]&#32;*&#32;autoControlLength;
<anchor xml:id="__bezier_path_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00565"/>00565 
<anchor xml:id="__bezier_path_8cs_source_1l00567"/><link linkend="_class_path_creation_1_1_bezier_path_1a8c68c9c40742ff4a0d07c23366083f27">00567</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a8c68c9c40742ff4a0d07c23366083f27">AutoSetStartAndEndControls</link>&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;case&#32;with&#32;only&#32;2&#32;anchor&#32;points&#32;separately,&#32;as&#32;will&#32;otherwise&#32;result&#32;in&#32;straight&#32;line&#32;()</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a7faf89e9e535007f3f491d54c26efe60">NumAnchorPoints</link>&#32;==&#32;2)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;dirAnchorAToB&#32;=&#32;(points[3]&#32;-&#32;points[0]).normalized;
<anchor xml:id="__bezier_path_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstBetweenAnchors&#32;=&#32;(points[0]&#32;-&#32;points[3]).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;perp&#32;=&#32;Vector3.Cross&#32;(dirAnchorAToB,&#32;(space&#32;==&#32;PathSpace.xy)&#32;?&#32;Vector3.forward&#32;:&#32;Vector3.up);
<anchor xml:id="__bezier_path_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[1]&#32;=&#32;points[0]&#32;+&#32;perp&#32;*&#32;dstBetweenAnchors&#32;/&#32;2f;
<anchor xml:id="__bezier_path_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[5]&#32;=&#32;points[0]&#32;-&#32;perp&#32;*&#32;dstBetweenAnchors&#32;/&#32;2f;
<anchor xml:id="__bezier_path_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[2]&#32;=&#32;points[3]&#32;+&#32;perp&#32;*&#32;dstBetweenAnchors&#32;/&#32;2f;
<anchor xml:id="__bezier_path_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[4]&#32;=&#32;points[3]&#32;-&#32;perp&#32;*&#32;dstBetweenAnchors&#32;/&#32;2f;
<anchor xml:id="__bezier_path_8cs_source_1l00578"/>00578 
<anchor xml:id="__bezier_path_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">AutoSetAnchorControlPoints</link>&#32;(0);
<anchor xml:id="__bezier_path_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a2325a3bc6729de2222ef961de6e13b68">AutoSetAnchorControlPoints</link>&#32;(points.Count&#32;-&#32;3);
<anchor xml:id="__bezier_path_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Handle&#32;case&#32;with&#32;2&#32;anchor&#32;points&#32;separately,&#32;as&#32;otherwise&#32;minor&#32;adjustments&#32;cause&#32;path&#32;to&#32;constantly&#32;flip</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_path_creation_1_1_bezier_path_1a7faf89e9e535007f3f491d54c26efe60">NumAnchorPoints</link>&#32;==&#32;2)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[1]&#32;=&#32;points[0]&#32;+&#32;(points[3]&#32;-&#32;points[0])&#32;*&#32;.25f;
<anchor xml:id="__bezier_path_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[2]&#32;=&#32;points[3]&#32;+&#32;(points[0]&#32;-&#32;points[3])&#32;*&#32;.25f;
<anchor xml:id="__bezier_path_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[1]&#32;=&#32;(points[0]&#32;+&#32;points[2])&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Count&#32;-&#32;2]&#32;=&#32;(points[points.Count&#32;-&#32;1]&#32;+&#32;points[points.Count&#32;-&#32;3])&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00594"/>00594 
<anchor xml:id="__bezier_path_8cs_source_1l00597"/><link linkend="_class_path_creation_1_1_bezier_path_1ac584b000da2691b488b51416e1fb4a66">00597</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1ac584b000da2691b488b51416e1fb4a66">UpdateToNewPathSpace</link>&#32;(PathSpace&#32;previousSpace)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;changing&#32;from&#32;3d&#32;to&#32;2d&#32;space,&#32;first&#32;find&#32;the&#32;bounds&#32;of&#32;the&#32;3d&#32;path.</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;axis&#32;with&#32;the&#32;smallest&#32;bounds&#32;will&#32;be&#32;discarded.</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previousSpace&#32;==&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;boundsSize&#32;=&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a7a1adffc40fe07f5e2db82a63b6fb33a">PathBounds</link>.size;
<anchor xml:id="__bezier_path_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;minBoundsSize&#32;=&#32;Mathf.Min&#32;(boundsSize.x,&#32;boundsSize.y,&#32;boundsSize.z);
<anchor xml:id="__bezier_path_8cs_source_1l00603"/>00603 
<anchor xml:id="__bezier_path_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xy)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;(minBoundsSize&#32;==&#32;boundsSize.x)&#32;?&#32;points[i].z&#32;:&#32;points[i].x;
<anchor xml:id="__bezier_path_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;(minBoundsSize&#32;==&#32;boundsSize.y)&#32;?&#32;points[i].z&#32;:&#32;points[i].y;
<anchor xml:id="__bezier_path_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(x,&#32;y,&#32;0);
<anchor xml:id="__bezier_path_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;(minBoundsSize&#32;==&#32;boundsSize.x)&#32;?&#32;points[i].y&#32;:&#32;points[i].x;
<anchor xml:id="__bezier_path_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;z&#32;=&#32;(minBoundsSize&#32;==&#32;boundsSize.z)&#32;?&#32;points[i].y&#32;:&#32;points[i].z;
<anchor xml:id="__bezier_path_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(x,&#32;0,&#32;z);
<anchor xml:id="__bezier_path_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Nothing&#32;needs&#32;to&#32;change&#32;when&#32;going&#32;to&#32;3d&#32;space</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;!=&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;&#32;i++)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;xz&#32;to&#32;xy</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xy)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(points[i].x,&#32;points[i].z,&#32;0);
<anchor xml:id="__bezier_path_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;from&#32;xy&#32;to&#32;xz</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;==&#32;PathSpace.xz)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(points[i].x,&#32;0,&#32;points[i].y);
<anchor xml:id="__bezier_path_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00630"/>00630 
<anchor xml:id="__bezier_path_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotifyPathModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00633"/>00633 
<anchor xml:id="__bezier_path_8cs_source_1l00635"/><link linkend="_class_path_creation_1_1_bezier_path_1a95b2dd724116a5cdfd043b44fe396a5c">00635</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a95b2dd724116a5cdfd043b44fe396a5c">UpdateClosedState</link>&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isClosed)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;positions&#32;for&#32;new&#32;controls&#32;to&#32;mirror&#32;their&#32;counterparts</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;lastAnchorSecondControl&#32;=&#32;points[points.Count&#32;-&#32;1]&#32;*&#32;2&#32;-&#32;points[points.Count&#32;-&#32;2];
<anchor xml:id="__bezier_path_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;firstAnchorSecondControl&#32;=&#32;points[0]&#32;*&#32;2&#32;-&#32;points[1];
<anchor xml:id="__bezier_path_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;!=&#32;ControlMode.Mirrored&#32;&amp;&amp;&#32;controlMode&#32;!=&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;positions&#32;for&#32;new&#32;controls&#32;to&#32;be&#32;aligned&#32;with&#32;their&#32;counterparts,&#32;but&#32;with&#32;a&#32;length&#32;of&#32;half&#32;the&#32;distance&#32;between&#32;start/end&#32;anchor</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstBetweenStartAndEndAnchors&#32;=&#32;(points[points.Count&#32;-&#32;1]&#32;-&#32;points[0]).magnitude;
<anchor xml:id="__bezier_path_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastAnchorSecondControl&#32;=&#32;points[points.Count&#32;-&#32;1]&#32;+&#32;(points[points.Count&#32;-&#32;1]&#32;-&#32;points[points.Count&#32;-&#32;2]).normalized&#32;*&#32;dstBetweenStartAndEndAnchors&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;firstAnchorSecondControl&#32;=&#32;points[0]&#32;+&#32;(points[0]&#32;-&#32;points[1]).normalized&#32;*&#32;dstBetweenStartAndEndAnchors&#32;*&#32;.5f;
<anchor xml:id="__bezier_path_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Add&#32;(lastAnchorSecondControl);
<anchor xml:id="__bezier_path_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.Add&#32;(firstAnchorSecondControl);
<anchor xml:id="__bezier_path_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points.RemoveRange&#32;(points.Count&#32;-&#32;2,&#32;2);
<anchor xml:id="__bezier_path_8cs_source_1l00650"/>00650 
<anchor xml:id="__bezier_path_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00652"/>00652 
<anchor xml:id="__bezier_path_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controlMode&#32;==&#32;ControlMode.Automatic)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a8c68c9c40742ff4a0d07c23366083f27">AutoSetStartAndEndControls</link>&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00656"/>00656 
<anchor xml:id="__bezier_path_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(OnModified&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00661"/>00661 
<anchor xml:id="__bezier_path_8cs_source_1l00663"/><link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">00663</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_path_creation_1_1_bezier_path_1a79ffaa88e458c92f2684c5bced692357">LoopIndex</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(i&#32;+&#32;points.Count)&#32;%&#32;points.Count;
<anchor xml:id="__bezier_path_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00666"/>00666 
<anchor xml:id="__bezier_path_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Called&#32;when&#32;the&#32;path&#32;is&#32;modified</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;NotifyPathModified&#32;()&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsUpToDate&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__bezier_path_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(OnModified&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__bezier_path_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnModified&#32;();
<anchor xml:id="__bezier_path_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00674"/>00674 
<anchor xml:id="__bezier_path_8cs_source_1l00675"/>00675 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__bezier_path_8cs_source_1l00676"/>00676 
<anchor xml:id="__bezier_path_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_path_8cs_source_1l00678"/>00678 }
</programlisting></section>
