<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__path_editor_8cs_source" xml:lang="en-US">
<title>PathEditor.cs</title>
<indexterm><primary>Tools/PathCreator/Core/Editor/PathEditor.cs</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__path_editor_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Generic;
<anchor xml:id="__path_editor_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_path_creation">PathCreation</link>;
<anchor xml:id="__path_editor_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_path_creation_1_1_utility">PathCreation.Utility</link>;
<anchor xml:id="__path_editor_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>UnityEditor;
<anchor xml:id="__path_editor_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>UnityEditor.IMGUI.Controls;
<anchor xml:id="__path_editor_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>UnityEngine;
<anchor xml:id="__path_editor_8cs_source_1l00007"/>00007 
<anchor xml:id="__path_editor_8cs_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_path_creation_editor">PathCreationEditor</link>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00010"/>00010 
<anchor xml:id="__path_editor_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;[CustomEditor&#32;(typeof&#32;(PathCreator))]
<anchor xml:id="__path_editor_8cs_source_1l00012"/><link linkend="_class_path_creation_editor_1_1_path_editor">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_path_creation_editor_1_1_path_editor">PathEditor</link>&#32;:&#32;Editor&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00013"/>00013 
<anchor xml:id="__path_editor_8cs_source_1l00014"/>00014 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Fields</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00015"/>00015 
<anchor xml:id="__path_editor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Interaction:</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;segmentSelectDistanceThreshold&#32;=&#32;10f;
<anchor xml:id="__path_editor_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;screenPolylineMaxAngleError&#32;=&#32;.3f;
<anchor xml:id="__path_editor_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;screenPolylineMinVertexDst&#32;=&#32;.01f;
<anchor xml:id="__path_editor_8cs_source_1l00020"/>00020 
<anchor xml:id="__path_editor_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Help&#32;messages:</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;helpInfo&#32;=&#32;<emphasis role="stringliteral">&quot;Shift-click&#32;to&#32;add&#32;or&#32;insert&#32;new&#32;points.&#32;Control-click&#32;to&#32;delete&#32;points.&#32;For&#32;more&#32;detailed&#32;infomation,&#32;please&#32;refer&#32;to&#32;the&#32;documentation.&quot;</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;spaceNames&#32;=&#32;{&#32;<emphasis role="stringliteral">&quot;3D&#32;(xyz)&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;2D&#32;(xy)&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Top-down&#32;(xz)&quot;</emphasis>&#32;};
<anchor xml:id="__path_editor_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;tabNames&#32;=&#32;{&#32;<emphasis role="stringliteral">&quot;BÃ©zier&#32;Path&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Vertex&#32;Path&quot;</emphasis>&#32;};
<anchor xml:id="__path_editor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;constantSizeTooltip&#32;=&#32;<emphasis role="stringliteral">&quot;If&#32;true,&#32;anchor&#32;and&#32;control&#32;points&#32;will&#32;keep&#32;a&#32;constant&#32;size&#32;when&#32;zooming&#32;in&#32;the&#32;editor.&quot;</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00026"/>00026 
<anchor xml:id="__path_editor_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Display</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;inspectorSectionSpacing&#32;=&#32;10;
<anchor xml:id="__path_editor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;constantHandleScale&#32;=&#32;.01f;
<anchor xml:id="__path_editor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;normalsSpacing&#32;=&#32;.2f;
<anchor xml:id="__path_editor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUIStyle&#32;boldFoldoutStyle;
<anchor xml:id="__path_editor_8cs_source_1l00032"/>00032 
<anchor xml:id="__path_editor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;References:</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathCreator&#32;creator;
<anchor xml:id="__path_editor_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Editor&#32;globalDisplaySettingsEditor;
<anchor xml:id="__path_editor_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ScreenSpacePolyLine&#32;screenSpaceLine;
<anchor xml:id="__path_editor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ScreenSpacePolyLine.MouseInfo&#32;pathMouseInfo;
<anchor xml:id="__path_editor_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GlobalDisplaySettings&#32;globalDisplaySettings;
<anchor xml:id="__path_editor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathHandle.HandleColours&#32;splineAnchorColours;
<anchor xml:id="__path_editor_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathHandle.HandleColours&#32;splineControlColours;
<anchor xml:id="__path_editor_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;GlobalDisplaySettings.HandleType,&#32;Handles.CapFunction&gt;&#32;capFunctions;
<anchor xml:id="__path_editor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ArcHandle&#32;anchorAngleHandle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ArcHandle&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_vertex_path">VertexPath</link>&#32;normalsVertexPath;
<anchor xml:id="__path_editor_8cs_source_1l00044"/>00044 
<anchor xml:id="__path_editor_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;State&#32;variables:</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;selectedSegmentIndex;
<anchor xml:id="__path_editor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;draggingHandleIndex;
<anchor xml:id="__path_editor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mouseOverHandleIndex;
<anchor xml:id="__path_editor_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;handleIndexToDisplayAsTransform;
<anchor xml:id="__path_editor_8cs_source_1l00050"/>00050 
<anchor xml:id="__path_editor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;shiftLastFrame;
<anchor xml:id="__path_editor_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasUpdatedScreenSpaceLine;
<anchor xml:id="__path_editor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasUpdatedNormalsVertexPath;
<anchor xml:id="__path_editor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;editingNormalsOld;
<anchor xml:id="__path_editor_8cs_source_1l00055"/>00055 
<anchor xml:id="__path_editor_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;transformPos;
<anchor xml:id="__path_editor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;transformScale;
<anchor xml:id="__path_editor_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;transformRot;
<anchor xml:id="__path_editor_8cs_source_1l00059"/>00059 
<anchor xml:id="__path_editor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;handlesStartCol;
<anchor xml:id="__path_editor_8cs_source_1l00061"/>00061 
<anchor xml:id="__path_editor_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constants</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bezierPathTab&#32;=&#32;0;
<anchor xml:id="__path_editor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertexPathTab&#32;=&#32;1;
<anchor xml:id="__path_editor_8cs_source_1l00065"/>00065 
<anchor xml:id="__path_editor_8cs_source_1l00066"/>00066 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00067"/>00067 
<anchor xml:id="__path_editor_8cs_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inspectors</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00069"/>00069 
<anchor xml:id="__path_editor_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInspectorGUI&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;GUI&#32;styles</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boldFoldoutStyle&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boldFoldoutStyle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle&#32;(EditorStyles.foldout);
<anchor xml:id="__path_editor_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boldFoldoutStyle.fontStyle&#32;=&#32;FontStyle.Bold;
<anchor xml:id="__path_editor_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00076"/>00076 
<anchor xml:id="__path_editor_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Path&#32;settings&#32;changed&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00078"/>00078 
<anchor xml:id="__path_editor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;Bezier&#32;and&#32;Vertex&#32;tabs</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tabIndex&#32;=&#32;GUILayout.Toolbar&#32;(data.tabIndex,&#32;tabNames);
<anchor xml:id="__path_editor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tabIndex&#32;!=&#32;data.tabIndex)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.tabIndex&#32;=&#32;tabIndex;
<anchor xml:id="__path_editor_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TabChanged&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00085"/>00085 
<anchor xml:id="__path_editor_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;inspector&#32;for&#32;active&#32;tab</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(data.tabIndex)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;bezierPathTab:
<anchor xml:id="__path_editor_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawBezierPathInspector&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;vertexPathTab:
<anchor xml:id="__path_editor_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawVertexPathInspector&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00095"/>00095 
<anchor xml:id="__path_editor_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Notify&#32;of&#32;undo/redo&#32;that&#32;might&#32;modify&#32;the&#32;path</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Event.current.type&#32;==&#32;EventType.ValidateCommand&#32;&amp;&amp;&#32;Event.current.commandName&#32;==&#32;<emphasis role="stringliteral">&quot;UndoRedoPerformed&quot;</emphasis>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.PathModifiedByUndo&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00101"/>00101 
<anchor xml:id="__path_editor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawBezierPathInspector&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;check&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EditorGUI.ChangeCheckScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Path&#32;options:</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showPathOptions&#32;=&#32;EditorGUILayout.Foldout&#32;(data.showPathOptions,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;BÃ©zier&#32;Path&#32;Options&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;boldFoldoutStyle);
<anchor xml:id="__path_editor_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showPathOptions)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.Space&#32;=&#32;(PathSpace)&#32;EditorGUILayout.Popup&#32;(<emphasis role="stringliteral">&quot;Space&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>,&#32;spaceNames);
<anchor xml:id="__path_editor_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.ControlPointMode&#32;=&#32;(<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>.ControlMode)&#32;EditorGUILayout.EnumPopup&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Control&#32;Mode&quot;</emphasis>),&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a16552136821334ce771512319d7be9f4">ControlPointMode</link>);
<anchor xml:id="__path_editor_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a16552136821334ce771512319d7be9f4">ControlPointMode</link>&#32;==&#32;<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>.ControlMode.Automatic)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.AutoControlLength&#32;=&#32;EditorGUILayout.Slider&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Control&#32;Spacing&quot;</emphasis>),&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1ad77316d5b3c1726244503f8b2540fe2d">AutoControlLength</link>,&#32;0,&#32;1);
<anchor xml:id="__path_editor_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00112"/>00112 
<anchor xml:id="__path_editor_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.IsClosed&#32;=&#32;EditorGUILayout.Toggle&#32;(<emphasis role="stringliteral">&quot;Closed&#32;Path&quot;</emphasis>,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>);
<anchor xml:id="__path_editor_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showTransformTool&#32;=&#32;EditorGUILayout.Toggle&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Enable&#32;Transforms&quot;</emphasis>),&#32;data.showTransformTool);
<anchor xml:id="__path_editor_8cs_source_1l00115"/>00115 
<anchor xml:id="__path_editor_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tools.hidden&#32;=&#32;!data.showTransformTool;
<anchor xml:id="__path_editor_8cs_source_1l00117"/>00117 
<anchor xml:id="__path_editor_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;out&#32;of&#32;bounds&#32;(can&#32;occur&#32;after&#32;undo&#32;operations)</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleIndexToDisplayAsTransform&#32;&gt;=&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00122"/>00122 
<anchor xml:id="__path_editor_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;a&#32;point&#32;has&#32;been&#32;selected</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleIndexToDisplayAsTransform&#32;!=&#32;-1)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField&#32;(<emphasis role="stringliteral">&quot;Selected&#32;Point:&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00126"/>00126 
<anchor xml:id="__path_editor_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;EditorGUI.IndentLevelScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentPosition&#32;=&#32;creator.bezierPath[handleIndexToDisplayAsTransform];
<anchor xml:id="__path_editor_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newPosition&#32;=&#32;EditorGUILayout.Vector3Field&#32;(<emphasis role="stringliteral">&quot;Position&quot;</emphasis>,&#32;currentPosition);
<anchor xml:id="__path_editor_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newPosition&#32;!=&#32;currentPosition)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Move&#32;point&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creator.bezierPath.MovePoint&#32;(handleIndexToDisplayAsTransform,&#32;newPosition);
<anchor xml:id="__path_editor_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;draw&#32;the&#32;angle&#32;field&#32;if&#32;we&#32;aren&apos;t&#32;selecting&#32;an&#32;anchor&#32;point/not&#32;in&#32;3d&#32;space</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleIndexToDisplayAsTransform&#32;%&#32;3&#32;==&#32;0&#32;&amp;&amp;&#32;creator.bezierPath.Space&#32;==&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;anchorIndex&#32;=&#32;handleIndexToDisplayAsTransform&#32;/&#32;3;
<anchor xml:id="__path_editor_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentAngle&#32;=&#32;creator.bezierPath.GetAnchorNormalAngle&#32;(anchorIndex);
<anchor xml:id="__path_editor_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newAngle&#32;=&#32;EditorGUILayout.FloatField&#32;(<emphasis role="stringliteral">&quot;Angle&quot;</emphasis>,&#32;currentAngle);
<anchor xml:id="__path_editor_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newAngle&#32;!=&#32;currentAngle)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Set&#32;Angle&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creator.bezierPath.SetAnchorNormalAngle&#32;(anchorIndex,&#32;newAngle);
<anchor xml:id="__path_editor_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00146"/>00146 
<anchor xml:id="__path_editor_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showTransformTool&#32;&amp;&#32;(handleIndexToDisplayAsTransform&#32;==&#32;-1))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button&#32;(<emphasis role="stringliteral">&quot;Centre&#32;Transform&quot;</emphasis>))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00149"/>00149 
<anchor xml:id="__path_editor_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;worldCentre&#32;=&#32;bezierPath.CalculateBoundsWithTransform&#32;(creator.transform).center;
<anchor xml:id="__path_editor_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;transformPos&#32;=&#32;creator.transform.position;
<anchor xml:id="__path_editor_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>&#32;==&#32;PathSpace.xy)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformPos&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(transformPos.x,&#32;transformPos.y,&#32;0);
<anchor xml:id="__path_editor_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>&#32;==&#32;PathSpace.xz)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformPos&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3&#32;(transformPos.x,&#32;0,&#32;transformPos.z);
<anchor xml:id="__path_editor_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;worldCentreToTransform&#32;=&#32;transformPos&#32;-&#32;worldCentre;
<anchor xml:id="__path_editor_8cs_source_1l00158"/>00158 
<anchor xml:id="__path_editor_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(worldCentre&#32;!=&#32;creator.transform.position)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Undo.RecordObject&#32;(creator,&#32;&quot;Centralize&#32;Transform&quot;);</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(worldCentreToTransform&#32;!=&#32;Vector3.zero)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localCentreToTransform&#32;=&#32;MathUtility.InverseTransformVector&#32;(worldCentreToTransform,&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.SetPoint&#32;(i,&#32;bezierPath.GetPoint&#32;(i)&#32;+&#32;localCentreToTransform,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00167"/>00167 
<anchor xml:id="__path_editor_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creator.transform.position&#32;=&#32;worldCentre;
<anchor xml:id="__path_editor_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.NotifyPathModified&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00173"/>00173 
<anchor xml:id="__path_editor_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button&#32;(<emphasis role="stringliteral">&quot;Reset&#32;Path&quot;</emphasis>))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Reset&#32;Path&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;in2DEditorMode&#32;=&#32;EditorSettings.defaultBehaviorMode&#32;==&#32;EditorBehaviorMode.Mode2D;
<anchor xml:id="__path_editor_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.ResetBezierPath&#32;(creator.transform.position,&#32;in2DEditorMode);
<anchor xml:id="__path_editor_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00180"/>00180 
<anchor xml:id="__path_editor_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space&#32;(inspectorSectionSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00183"/>00183 
<anchor xml:id="__path_editor_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showNormals&#32;=&#32;EditorGUILayout.Foldout&#32;(data.showNormals,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Normals&#32;Options&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;boldFoldoutStyle);
<anchor xml:id="__path_editor_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showNormals)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.FlipNormals&#32;=&#32;EditorGUILayout.Toggle&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Flip&#32;Normals&quot;</emphasis>),&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a4ef9d3ec8744096f518dc1a650fc26c1">FlipNormals</link>);
<anchor xml:id="__path_editor_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>&#32;==&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.GlobalNormalsAngle&#32;=&#32;EditorGUILayout.Slider&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Global&#32;Angle&quot;</emphasis>),&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1abe9a53426b4002473d61f85798101296">GlobalNormalsAngle</link>,&#32;0,&#32;360);
<anchor xml:id="__path_editor_8cs_source_1l00189"/>00189 
<anchor xml:id="__path_editor_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button&#32;(<emphasis role="stringliteral">&quot;Reset&#32;Normals&quot;</emphasis>))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Reset&#32;Normals&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.FlipNormals&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.ResetNormalAngles&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space&#32;(inspectorSectionSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00198"/>00198 
<anchor xml:id="__path_editor_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Editor&#32;display&#32;options</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showDisplayOptions&#32;=&#32;EditorGUILayout.Foldout&#32;(data.showDisplayOptions,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Display&#32;Options&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;boldFoldoutStyle);
<anchor xml:id="__path_editor_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showDisplayOptions)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showPathBounds&#32;=&#32;GUILayout.Toggle&#32;(data.showPathBounds,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Path&#32;Bounds&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showPerSegmentBounds&#32;=&#32;GUILayout.Toggle&#32;(data.showPerSegmentBounds,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Segment&#32;Bounds&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.displayAnchorPoints&#32;=&#32;GUILayout.Toggle&#32;(data.displayAnchorPoints,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Anchor&#32;Points&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a16552136821334ce771512319d7be9f4">ControlPointMode</link>&#32;==&#32;<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>.ControlMode.Automatic&#32;&amp;&amp;&#32;globalDisplaySettings.hideAutoControls))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.displayControlPoints&#32;=&#32;GUILayout.Toggle&#32;(data.displayControlPoints,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Control&#32;Points&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.keepConstantHandleSize&#32;=&#32;GUILayout.Toggle&#32;(data.keepConstantHandleSize,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Constant&#32;Point&#32;Size&quot;</emphasis>,&#32;constantSizeTooltip));
<anchor xml:id="__path_editor_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.bezierHandleScale&#32;=&#32;Mathf.Max&#32;(0,&#32;EditorGUILayout.FloatField&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Handle&#32;Scale&quot;</emphasis>),&#32;data.bezierHandleScale));
<anchor xml:id="__path_editor_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawGlobalDisplaySettingsInspector&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00212"/>00212 
<anchor xml:id="__path_editor_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(check.changed)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00219"/>00219 
<anchor xml:id="__path_editor_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawVertexPathInspector&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00221"/>00221 
<anchor xml:id="__path_editor_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space&#32;(inspectorSectionSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField&#32;(<emphasis role="stringliteral">&quot;Vertex&#32;count:&#32;&quot;</emphasis>&#32;+&#32;creator.path.NumPoints);
<anchor xml:id="__path_editor_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space&#32;(inspectorSectionSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00225"/>00225 
<anchor xml:id="__path_editor_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showVertexPathOptions&#32;=&#32;EditorGUILayout.Foldout&#32;(data.showVertexPathOptions,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Vertex&#32;Path&#32;Options&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;boldFoldoutStyle);
<anchor xml:id="__path_editor_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showVertexPathOptions)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;check&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EditorGUI.ChangeCheckScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.vertexPathMaxAngleError&#32;=&#32;EditorGUILayout.Slider&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Max&#32;Angle&#32;Error&quot;</emphasis>),&#32;data.vertexPathMaxAngleError,&#32;0,&#32;45);
<anchor xml:id="__path_editor_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.vertexPathMinVertexSpacing&#32;=&#32;EditorGUILayout.Slider&#32;(<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Min&#32;Vertex&#32;Dst&quot;</emphasis>),&#32;data.vertexPathMinVertexSpacing,&#32;0,&#32;1);
<anchor xml:id="__path_editor_8cs_source_1l00231"/>00231 
<anchor xml:id="__path_editor_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space&#32;(inspectorSectionSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(check.changed)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.VertexPathSettingsChanged&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00240"/>00240 
<anchor xml:id="__path_editor_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showVertexPathDisplayOptions&#32;=&#32;EditorGUILayout.Foldout&#32;(data.showVertexPathDisplayOptions,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Display&#32;Options&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>,&#32;boldFoldoutStyle);
<anchor xml:id="__path_editor_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showVertexPathDisplayOptions)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;check&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EditorGUI.ChangeCheckScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showNormalsInVertexMode&#32;=&#32;GUILayout.Toggle&#32;(data.showNormalsInVertexMode,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Normals&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.showBezierPathInVertexMode&#32;=&#32;GUILayout.Toggle&#32;(data.showBezierPathInVertexMode,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent&#32;(<emphasis role="stringliteral">&quot;Show&#32;Bezier&#32;Path&quot;</emphasis>));
<anchor xml:id="__path_editor_8cs_source_1l00246"/>00246 
<anchor xml:id="__path_editor_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(check.changed)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawGlobalDisplaySettingsInspector&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00255"/>00255 
<anchor xml:id="__path_editor_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawGlobalDisplaySettingsInspector&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;check&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EditorGUI.ChangeCheckScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.globalDisplaySettingsFoldout&#32;=&#32;EditorGUILayout.InspectorTitlebar&#32;(data.globalDisplaySettingsFoldout,&#32;globalDisplaySettings);
<anchor xml:id="__path_editor_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.globalDisplaySettingsFoldout)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateCachedEditor&#32;(globalDisplaySettings,&#32;<emphasis role="keyword">null</emphasis>,&#32;ref&#32;globalDisplaySettingsEditor);
<anchor xml:id="__path_editor_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;globalDisplaySettingsEditor.OnInspectorGUI&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(check.changed)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateGlobalDisplaySettings&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00269"/>00269 
<anchor xml:id="__path_editor_8cs_source_1l00270"/>00270 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00271"/>00271 
<anchor xml:id="__path_editor_8cs_source_1l00272"/>00272 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Scene&#32;GUI</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00273"/>00273 
<anchor xml:id="__path_editor_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSceneGUI&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!globalDisplaySettings.visibleBehindObjects)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.zTest&#32;=&#32;UnityEngine.Rendering.CompareFunction.LessEqual;
<anchor xml:id="__path_editor_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00278"/>00278 
<anchor xml:id="__path_editor_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EventType&#32;eventType&#32;=&#32;Event.current.type;
<anchor xml:id="__path_editor_8cs_source_1l00280"/>00280 
<anchor xml:id="__path_editor_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(var&#32;check&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EditorGUI.ChangeCheckScope&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handlesStartCol&#32;=&#32;Handles.color;
<anchor xml:id="__path_editor_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(data.tabIndex)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;bezierPathTab:
<anchor xml:id="__path_editor_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventType&#32;!=&#32;EventType.Repaint&#32;&amp;&amp;&#32;eventType&#32;!=&#32;EventType.Layout)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProcessBezierPathInput&#32;(Event.current);
<anchor xml:id="__path_editor_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00288"/>00288 
<anchor xml:id="__path_editor_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawBezierPathSceneEditor&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;vertexPathTab:
<anchor xml:id="__path_editor_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventType&#32;==&#32;EventType.Repaint)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawVertexPathSceneEditor&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00297"/>00297 
<anchor xml:id="__path_editor_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;allow&#32;clicking&#32;over&#32;empty&#32;space&#32;to&#32;deselect&#32;the&#32;object</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventType&#32;==&#32;EventType.Layout)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HandleUtility.AddDefaultControl&#32;(0);
<anchor xml:id="__path_editor_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00302"/>00302 
<anchor xml:id="__path_editor_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(check.changed)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00307"/>00307 
<anchor xml:id="__path_editor_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetTransformState&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00310"/>00310 
<anchor xml:id="__path_editor_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawVertexPathSceneEditor&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00312"/>00312 
<anchor xml:id="__path_editor_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;bezierCol&#32;=&#32;globalDisplaySettings.bezierPath;
<anchor xml:id="__path_editor_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierCol.a&#32;*=&#32;.5f;
<anchor xml:id="__path_editor_8cs_source_1l00315"/>00315 
<anchor xml:id="__path_editor_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showBezierPathInVertexMode)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;points&#32;=&#32;bezierPath.GetPointsInSegment&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;points.Length;&#32;j++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[j]&#32;=&#32;MathUtility.TransformPoint&#32;(points[j],&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawBezier&#32;(points[0],&#32;points[3],&#32;points[1],&#32;points[2],&#32;bezierCol,&#32;<emphasis role="keyword">null</emphasis>,&#32;2);
<anchor xml:id="__path_editor_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00325"/>00325 
<anchor xml:id="__path_editor_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;globalDisplaySettings.vertexPath;
<anchor xml:id="__path_editor_8cs_source_1l00327"/>00327 
<anchor xml:id="__path_editor_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;creator.path.NumPoints;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextIndex&#32;=&#32;(i&#32;+&#32;1)&#32;%&#32;creator.path.NumPoints;
<anchor xml:id="__path_editor_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nextIndex&#32;!=&#32;0&#32;||&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine&#32;(creator.path.GetPoint&#32;(i),&#32;creator.path.GetPoint&#32;(nextIndex));
<anchor xml:id="__path_editor_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00334"/>00334 
<anchor xml:id="__path_editor_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showNormalsInVertexMode)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;globalDisplaySettings.normals;
<anchor xml:id="__path_editor_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;normalLines&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[creator.path.NumPoints&#32;*&#32;2];
<anchor xml:id="__path_editor_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;creator.path.NumPoints;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalLines[i&#32;*&#32;2]&#32;=&#32;creator.path.GetPoint&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalLines[i&#32;*&#32;2&#32;+&#32;1]&#32;=&#32;creator.path.GetPoint&#32;(i)&#32;+&#32;creator.path.localNormals[i]&#32;*&#32;globalDisplaySettings.normalsLength;
<anchor xml:id="__path_editor_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLines&#32;(normalLines);
<anchor xml:id="__path_editor_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00345"/>00345 
<anchor xml:id="__path_editor_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ProcessBezierPathInput&#32;(Event&#32;e)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;which&#32;handle&#32;mouse&#32;is&#32;over.&#32;Start&#32;by&#32;looking&#32;at&#32;previous&#32;handle&#32;index&#32;first,&#32;as&#32;most&#32;likely&#32;to&#32;still&#32;be&#32;closest&#32;to&#32;mouse</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;previousMouseOverHandleIndex&#32;=&#32;(mouseOverHandleIndex&#32;==&#32;-1)&#32;?&#32;0&#32;:&#32;mouseOverHandleIndex;
<anchor xml:id="__path_editor_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mouseOverHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;&#32;i&#32;+=&#32;3)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00351"/>00351 
<anchor xml:id="__path_editor_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;handleIndex&#32;=&#32;(previousMouseOverHandleIndex&#32;+&#32;i)&#32;%&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;
<anchor xml:id="__path_editor_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;handleRadius&#32;=&#32;GetHandleDiameter&#32;(globalDisplaySettings.anchorSize&#32;*&#32;data.bezierHandleScale,&#32;bezierPath[handleIndex])&#32;/&#32;2f;
<anchor xml:id="__path_editor_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;pos&#32;=&#32;MathUtility.TransformPoint&#32;(bezierPath[handleIndex],&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dst&#32;=&#32;HandleUtility.DistanceToCircle&#32;(pos,&#32;handleRadius);
<anchor xml:id="__path_editor_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dst&#32;==&#32;0)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mouseOverHandleIndex&#32;=&#32;handleIndex;
<anchor xml:id="__path_editor_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00361"/>00361 
<anchor xml:id="__path_editor_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Shift-left&#32;click&#32;(when&#32;mouse&#32;not&#32;over&#32;a&#32;handle)&#32;to&#32;split&#32;or&#32;add&#32;segment</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mouseOverHandleIndex&#32;==&#32;-1)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.type&#32;==&#32;EventType.MouseDown&#32;&amp;&amp;&#32;e.button&#32;==&#32;0&#32;&amp;&amp;&#32;e.shift)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdatePathMouseInfo&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insert&#32;point&#32;along&#32;selected&#32;segment</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(selectedSegmentIndex&#32;!=&#32;-1&#32;&amp;&amp;&#32;selectedSegmentIndex&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;newPathPoint&#32;=&#32;pathMouseInfo.closestWorldPointToMouse;
<anchor xml:id="__path_editor_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newPathPoint&#32;=&#32;MathUtility.InverseTransformPoint&#32;(newPathPoint,&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Split&#32;segment&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.SplitSegment&#32;(newPathPoint,&#32;selectedSegmentIndex,&#32;pathMouseInfo.timeOnBezierSegment);
<anchor xml:id="__path_editor_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;path&#32;is&#32;not&#32;a&#32;closed&#32;loop,&#32;add&#32;new&#32;point&#32;on&#32;to&#32;the&#32;end&#32;of&#32;the&#32;path</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a26f01b589d00384406eb54173d4d7aca">IsClosed</link>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;insert&#32;new&#32;point&#32;at&#32;same&#32;dst&#32;from&#32;scene&#32;camera&#32;as&#32;the&#32;point&#32;that&#32;comes&#32;before&#32;it&#32;(for&#32;a&#32;3d&#32;path)</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstCamToEndpoint&#32;=&#32;(Camera.current.transform.position&#32;-&#32;bezierPath[bezierPath.NumPoints&#32;-&#32;1]).magnitude;
<anchor xml:id="__path_editor_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;newPathPoint&#32;=&#32;MouseUtility.GetMouseWorldPosition&#32;(bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>,&#32;dstCamToEndpoint);
<anchor xml:id="__path_editor_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newPathPoint&#32;=&#32;MathUtility.InverseTransformPoint&#32;(newPathPoint,&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00379"/>00379 
<anchor xml:id="__path_editor_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Add&#32;segment&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.control&#32;||&#32;e.command)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.AddSegmentToStart&#32;(newPathPoint);
<anchor xml:id="__path_editor_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.AddSegmentToEnd&#32;(newPathPoint);
<anchor xml:id="__path_editor_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00386"/>00386 
<anchor xml:id="__path_editor_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00388"/>00388 
<anchor xml:id="__path_editor_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00391"/>00391 
<anchor xml:id="__path_editor_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Control&#32;click&#32;or&#32;backspace/delete&#32;to&#32;remove&#32;point</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.keyCode&#32;==&#32;KeyCode.Backspace&#32;||&#32;e.keyCode&#32;==&#32;KeyCode.Delete&#32;||&#32;((e.control&#32;||&#32;e.command)&#32;&amp;&amp;&#32;e.type&#32;==&#32;EventType.MouseDown&#32;&amp;&amp;&#32;e.button&#32;==&#32;0))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00394"/>00394 
<anchor xml:id="__path_editor_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mouseOverHandleIndex&#32;!=&#32;-1)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Delete&#32;segment&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.DeleteSegment&#32;(mouseOverHandleIndex);
<anchor xml:id="__path_editor_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mouseOverHandleIndex&#32;==&#32;handleIndexToDisplayAsTransform)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mouseOverHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00405"/>00405 
<anchor xml:id="__path_editor_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Holding&#32;shift&#32;and&#32;moving&#32;mouse&#32;(but&#32;mouse&#32;not&#32;over&#32;a&#32;handle/dragging&#32;a&#32;handle)</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(draggingHandleIndex&#32;==&#32;-1&#32;&amp;&amp;&#32;mouseOverHandleIndex&#32;==&#32;-1)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;shiftDown&#32;=&#32;e.shift&#32;&amp;&amp;&#32;!shiftLastFrame;
<anchor xml:id="__path_editor_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shiftDown&#32;||&#32;((e.type&#32;==&#32;EventType.MouseMove&#32;||&#32;e.type&#32;==&#32;EventType.MouseDrag)&#32;&amp;&amp;&#32;e.shift))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00410"/>00410 
<anchor xml:id="__path_editor_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdatePathMouseInfo&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00412"/>00412 
<anchor xml:id="__path_editor_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pathMouseInfo.mouseDstToLine&#32;&lt;&#32;segmentSelectDistanceThreshold)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pathMouseInfo.closestSegmentIndex&#32;!=&#32;selectedSegmentIndex)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectedSegmentIndex&#32;=&#32;pathMouseInfo.closestSegmentIndex;
<anchor xml:id="__path_editor_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HandleUtility.Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectedSegmentIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HandleUtility.Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00422"/>00422 
<anchor xml:id="__path_editor_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00425"/>00425 
<anchor xml:id="__path_editor_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shiftLastFrame&#32;=&#32;e.shift;
<anchor xml:id="__path_editor_8cs_source_1l00427"/>00427 
<anchor xml:id="__path_editor_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00429"/>00429 
<anchor xml:id="__path_editor_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawBezierPathSceneEditor&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00431"/>00431 
<anchor xml:id="__path_editor_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;displayControlPoints&#32;=&#32;data.displayControlPoints&#32;&amp;&amp;&#32;(bezierPath.ControlPointMode&#32;!=&#32;BezierPath.ControlMode.Automatic&#32;||&#32;!globalDisplaySettings.hideAutoControls);
<anchor xml:id="__path_editor_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Bounds&#32;bounds&#32;=&#32;bezierPath.CalculateBoundsWithTransform&#32;(creator.transform);
<anchor xml:id="__path_editor_8cs_source_1l00434"/>00434 
<anchor xml:id="__path_editor_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Event.current.type&#32;==&#32;EventType.Repaint)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1aba6ba2ef023e1b5fcc541ce2ec07da30">NumSegments</link>;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;points&#32;=&#32;bezierPath.GetPointsInSegment&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;points.Length;&#32;j++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[j]&#32;=&#32;MathUtility.TransformPoint&#32;(points[j],&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00441"/>00441 
<anchor xml:id="__path_editor_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showPerSegmentBounds)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Bounds&#32;segmentBounds&#32;=&#32;CubicBezierUtility.CalculateSegmentBounds&#32;(points[0],&#32;points[1],&#32;points[2],&#32;points[3]);
<anchor xml:id="__path_editor_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;globalDisplaySettings.segmentBounds;
<anchor xml:id="__path_editor_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawWireCube&#32;(segmentBounds.center,&#32;segmentBounds.size);
<anchor xml:id="__path_editor_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00447"/>00447 
<anchor xml:id="__path_editor_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;lines&#32;between&#32;control&#32;points</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayControlPoints)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;(bezierPath.ControlPointMode&#32;==&#32;<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>.ControlMode.Automatic)&#32;?&#32;globalDisplaySettings.handleDisabled&#32;:&#32;globalDisplaySettings.controlLine;
<anchor xml:id="__path_editor_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine&#32;(points[1],&#32;points[0]);
<anchor xml:id="__path_editor_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine&#32;(points[2],&#32;points[3]);
<anchor xml:id="__path_editor_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00454"/>00454 
<anchor xml:id="__path_editor_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;path</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;highlightSegment&#32;=&#32;(i&#32;==&#32;selectedSegmentIndex&#32;&amp;&amp;&#32;Event.current.shift&#32;&amp;&amp;&#32;draggingHandleIndex&#32;==&#32;-1&#32;&amp;&amp;&#32;mouseOverHandleIndex&#32;==&#32;-1);
<anchor xml:id="__path_editor_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;segmentCol&#32;=&#32;(highlightSegment)&#32;?&#32;globalDisplaySettings.highlightedPath&#32;:&#32;globalDisplaySettings.bezierPath;
<anchor xml:id="__path_editor_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawBezier&#32;(points[0],&#32;points[3],&#32;points[1],&#32;points[2],&#32;segmentCol,&#32;<emphasis role="keyword">null</emphasis>,&#32;2);
<anchor xml:id="__path_editor_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00460"/>00460 
<anchor xml:id="__path_editor_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showPathBounds)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;globalDisplaySettings.bounds;
<anchor xml:id="__path_editor_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawWireCube&#32;(bounds.center,&#32;bounds.size);
<anchor xml:id="__path_editor_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00465"/>00465 
<anchor xml:id="__path_editor_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;normals</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showNormals)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!hasUpdatedNormalsVertexPath)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalsVertexPath&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_path_creation_1_1_vertex_path">VertexPath</link>&#32;(bezierPath,&#32;creator.transform,&#32;normalsSpacing);
<anchor xml:id="__path_editor_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedNormalsVertexPath&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00472"/>00472 
<anchor xml:id="__path_editor_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(editingNormalsOld&#32;!=&#32;data.showNormals)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;editingNormalsOld&#32;=&#32;data.showNormals;
<anchor xml:id="__path_editor_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00477"/>00477 
<anchor xml:id="__path_editor_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3[]&#32;normalLines&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[normalsVertexPath.NumPoints&#32;*&#32;2];
<anchor xml:id="__path_editor_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;globalDisplaySettings.normals;
<anchor xml:id="__path_editor_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;normalsVertexPath.NumPoints;&#32;i++)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalLines[i&#32;*&#32;2]&#32;=&#32;normalsVertexPath.GetPoint&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalLines[i&#32;*&#32;2&#32;+&#32;1]&#32;=&#32;normalsVertexPath.GetPoint&#32;(i)&#32;+&#32;normalsVertexPath.GetNormal&#32;(i)&#32;*&#32;globalDisplaySettings.normalsLength;
<anchor xml:id="__path_editor_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLines&#32;(normalLines);
<anchor xml:id="__path_editor_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00487"/>00487 
<anchor xml:id="__path_editor_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.displayAnchorPoints)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a76122faf62db75c06e32a6aca7ffd666">NumPoints</link>;&#32;i&#32;+=&#32;3)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawHandle&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayControlPoints)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;bezierPath.NumPoints&#32;-&#32;1;&#32;i&#32;+=&#32;3)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawHandle&#32;(i);
<anchor xml:id="__path_editor_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawHandle&#32;(i&#32;+&#32;1);
<anchor xml:id="__path_editor_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00500"/>00500 
<anchor xml:id="__path_editor_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawHandle&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;handlePosition&#32;=&#32;MathUtility.TransformPoint&#32;(bezierPath[i],&#32;creator.transform,&#32;bezierPath.<link linkend="_class_path_creation_1_1_bezier_path_1a0cacc3cec2744929171dc4d0563ea19e">Space</link>);
<anchor xml:id="__path_editor_8cs_source_1l00503"/>00503 
<anchor xml:id="__path_editor_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;anchorHandleSize&#32;=&#32;GetHandleDiameter&#32;(globalDisplaySettings.anchorSize&#32;*&#32;data.bezierHandleScale,&#32;bezierPath[i]);
<anchor xml:id="__path_editor_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;controlHandleSize&#32;=&#32;GetHandleDiameter&#32;(globalDisplaySettings.controlSize&#32;*&#32;data.bezierHandleScale,&#32;bezierPath[i]);
<anchor xml:id="__path_editor_8cs_source_1l00506"/>00506 
<anchor xml:id="__path_editor_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isAnchorPoint&#32;=&#32;i&#32;%&#32;3&#32;==&#32;0;
<anchor xml:id="__path_editor_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isInteractive&#32;=&#32;isAnchorPoint&#32;||&#32;bezierPath.ControlPointMode&#32;!=&#32;<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>.ControlMode.Automatic;
<anchor xml:id="__path_editor_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;handleSize&#32;=&#32;(isAnchorPoint)&#32;?&#32;anchorHandleSize&#32;:&#32;controlHandleSize;
<anchor xml:id="__path_editor_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;doTransformHandle&#32;=&#32;i&#32;==&#32;handleIndexToDisplayAsTransform;
<anchor xml:id="__path_editor_8cs_source_1l00511"/>00511 
<anchor xml:id="__path_editor_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathHandle.HandleColours&#32;handleColours&#32;=&#32;(isAnchorPoint)&#32;?&#32;splineAnchorColours&#32;:&#32;splineControlColours;
<anchor xml:id="__path_editor_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;handleIndexToDisplayAsTransform)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleColours.defaultColour&#32;=&#32;(isAnchorPoint)&#32;?&#32;globalDisplaySettings.anchorSelected&#32;:&#32;globalDisplaySettings.controlSelected;
<anchor xml:id="__path_editor_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cap&#32;=&#32;capFunctions[(isAnchorPoint)&#32;?&#32;globalDisplaySettings.anchorShape&#32;:&#32;globalDisplaySettings.controlShape];
<anchor xml:id="__path_editor_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PathHandle.HandleInputType&#32;handleInputType;
<anchor xml:id="__path_editor_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handlePosition&#32;=&#32;PathHandle.DrawHandle&#32;(handlePosition,&#32;bezierPath.Space,&#32;isInteractive,&#32;handleSize,&#32;cap,&#32;handleColours,&#32;out&#32;handleInputType,&#32;i);
<anchor xml:id="__path_editor_8cs_source_1l00519"/>00519 
<anchor xml:id="__path_editor_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(doTransformHandle)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Show&#32;normals&#32;rotate&#32;tool&#32;</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.showNormals&#32;&amp;&amp;&#32;<link linkend="_namespace_tools">Tools</link>.current&#32;==&#32;Tool.Rotate&#32;&amp;&amp;&#32;isAnchorPoint&#32;&amp;&amp;&#32;bezierPath.Space&#32;==&#32;PathSpace.xyz)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;handlesStartCol;
<anchor xml:id="__path_editor_8cs_source_1l00524"/>00524 
<anchor xml:id="__path_editor_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;attachedControlIndex&#32;=&#32;(i&#32;==&#32;bezierPath.NumPoints&#32;-&#32;1)&#32;?&#32;i&#32;-&#32;1&#32;:&#32;i&#32;+&#32;1;
<anchor xml:id="__path_editor_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;dir&#32;=&#32;(bezierPath[attachedControlIndex]&#32;-&#32;handlePosition).normalized;
<anchor xml:id="__path_editor_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;handleRotOffset&#32;=&#32;(360&#32;+&#32;bezierPath.GlobalNormalsAngle)&#32;%&#32;360;
<anchor xml:id="__path_editor_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.radius&#32;=&#32;handleSize&#32;*&#32;3;
<anchor xml:id="__path_editor_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.angle&#32;=&#32;handleRotOffset&#32;+&#32;bezierPath.GetAnchorNormalAngle&#32;(i&#32;/&#32;3);
<anchor xml:id="__path_editor_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;handleDirection&#32;=&#32;Vector3.Cross&#32;(dir,&#32;Vector3.up);
<anchor xml:id="__path_editor_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Matrix4x4&#32;handleMatrix&#32;=&#32;Matrix4x4.TRS&#32;(
<anchor xml:id="__path_editor_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handlePosition,
<anchor xml:id="__path_editor_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion.LookRotation&#32;(handleDirection,&#32;dir),
<anchor xml:id="__path_editor_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.one
<anchor xml:id="__path_editor_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__path_editor_8cs_source_1l00536"/>00536 
<anchor xml:id="__path_editor_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;Handles.DrawingScope&#32;(handleMatrix))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;draw&#32;the&#32;handle</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.DrawHandle&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck&#32;())&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Set&#32;angle&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.SetAnchorNormalAngle&#32;(i&#32;/&#32;3,&#32;anchorAngleHandle.angle&#32;-&#32;handleRotOffset);
<anchor xml:id="__path_editor_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00546"/>00546 
<anchor xml:id="__path_editor_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handlePosition&#32;=&#32;Handles.DoPositionHandle&#32;(handlePosition,&#32;Quaternion.identity);
<anchor xml:id="__path_editor_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00550"/>00550 
<anchor xml:id="__path_editor_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00552"/>00552 
<anchor xml:id="__path_editor_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(handleInputType)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PathHandle.HandleInputType.LMBDrag:
<anchor xml:id="__path_editor_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draggingHandleIndex&#32;=&#32;i;
<anchor xml:id="__path_editor_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PathHandle.HandleInputType.LMBRelease:
<anchor xml:id="__path_editor_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draggingHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PathHandle.HandleInputType.LMBClick:
<anchor xml:id="__path_editor_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draggingHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Event.current.shift)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;&#32;<emphasis role="comment">//&#32;disable&#32;move&#32;tool&#32;if&#32;new&#32;point&#32;added</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleIndexToDisplayAsTransform&#32;==&#32;i)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;&#32;<emphasis role="comment">//&#32;disable&#32;move&#32;tool&#32;if&#32;clicking&#32;on&#32;point&#32;under&#32;move&#32;tool</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;i;
<anchor xml:id="__path_editor_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PathHandle.HandleInputType.LMBPress:
<anchor xml:id="__path_editor_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handleIndexToDisplayAsTransform&#32;!=&#32;i)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00584"/>00584 
<anchor xml:id="__path_editor_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localHandlePosition&#32;=&#32;MathUtility.InverseTransformPoint&#32;(handlePosition,&#32;creator.transform,&#32;bezierPath.Space);
<anchor xml:id="__path_editor_8cs_source_1l00586"/>00586 
<anchor xml:id="__path_editor_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bezierPath[i]&#32;!=&#32;localHandlePosition)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject&#32;(creator,&#32;<emphasis role="stringliteral">&quot;Move&#32;point&quot;</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.MovePoint&#32;(i,&#32;localHandlePosition);
<anchor xml:id="__path_editor_8cs_source_1l00590"/>00590 
<anchor xml:id="__path_editor_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00592"/>00592 
<anchor xml:id="__path_editor_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00594"/>00594 
<anchor xml:id="__path_editor_8cs_source_1l00595"/>00595 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00596"/>00596 
<anchor xml:id="__path_editor_8cs_source_1l00597"/>00597 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Internal&#32;methods</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00598"/>00598 
<anchor xml:id="__path_editor_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tools.hidden&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00602"/>00602 
<anchor xml:id="__path_editor_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creator&#32;=&#32;(PathCreator)&#32;target;
<anchor xml:id="__path_editor_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;in2DEditorMode&#32;=&#32;EditorSettings.defaultBehaviorMode&#32;==&#32;EditorBehaviorMode.Mode2D;
<anchor xml:id="__path_editor_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creator.InitializeEditorData&#32;(in2DEditorMode);
<anchor xml:id="__path_editor_8cs_source_1l00607"/>00607 
<anchor xml:id="__path_editor_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.bezierCreated&#32;-=&#32;ResetState;
<anchor xml:id="__path_editor_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.bezierCreated&#32;+=&#32;ResetState;
<anchor xml:id="__path_editor_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.undoRedoPerformed&#32;-=&#32;OnUndoRedo;
<anchor xml:id="__path_editor_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.undoRedoPerformed&#32;+=&#32;OnUndoRedo;
<anchor xml:id="__path_editor_8cs_source_1l00612"/>00612 
<anchor xml:id="__path_editor_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LoadDisplaySettings&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateGlobalDisplaySettings&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResetState&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetTransformState&#32;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__path_editor_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00618"/>00618 
<anchor xml:id="__path_editor_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetTransformState&#32;(<emphasis role="keywordtype">bool</emphasis>&#32;initialize&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;t&#32;=&#32;creator.transform;
<anchor xml:id="__path_editor_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!initialize)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(transformPos&#32;!=&#32;t.position&#32;||&#32;t.localScale&#32;!=&#32;transformScale&#32;||&#32;t.rotation&#32;!=&#32;transformRot)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.PathTransformed&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformPos&#32;=&#32;t.position;
<anchor xml:id="__path_editor_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformScale&#32;=&#32;t.localScale;
<anchor xml:id="__path_editor_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformRot&#32;=&#32;t.rotation;
<anchor xml:id="__path_editor_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00630"/>00630 
<anchor xml:id="__path_editor_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnUndoRedo&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedScreenSpaceLine&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedNormalsVertexPath&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectedSegmentIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00635"/>00635 
<anchor xml:id="__path_editor_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00638"/>00638 
<anchor xml:id="__path_editor_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;TabChanged&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RepaintUnfocusedSceneViews&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00643"/>00643 
<anchor xml:id="__path_editor_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;LoadDisplaySettings&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;globalDisplaySettings&#32;=&#32;GlobalDisplaySettings.Load&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00646"/>00646 
<anchor xml:id="__path_editor_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capFunctions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;GlobalDisplaySettings.HandleType,&#32;Handles.CapFunction&gt;&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capFunctions.Add&#32;(GlobalDisplaySettings.HandleType.Circle,&#32;Handles.CylinderHandleCap);
<anchor xml:id="__path_editor_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capFunctions.Add&#32;(GlobalDisplaySettings.HandleType.Sphere,&#32;Handles.SphereHandleCap);
<anchor xml:id="__path_editor_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capFunctions.Add&#32;(GlobalDisplaySettings.HandleType.Square,&#32;Handles.CubeHandleCap);
<anchor xml:id="__path_editor_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00652"/>00652 
<anchor xml:id="__path_editor_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateGlobalDisplaySettings&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;gds&#32;=&#32;globalDisplaySettings;
<anchor xml:id="__path_editor_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;splineAnchorColours&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PathHandle.HandleColours&#32;(gds.anchor,&#32;gds.anchorHighlighted,&#32;gds.anchorSelected,&#32;gds.handleDisabled);
<anchor xml:id="__path_editor_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;splineControlColours&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PathHandle.HandleColours&#32;(gds.control,&#32;gds.controlHighlighted,&#32;gds.controlSelected,&#32;gds.handleDisabled);
<anchor xml:id="__path_editor_8cs_source_1l00657"/>00657 
<anchor xml:id="__path_editor_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.fillColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color&#32;(1,&#32;1,&#32;1,&#32;.05f);
<anchor xml:id="__path_editor_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.wireframeColor&#32;=&#32;Color.grey;
<anchor xml:id="__path_editor_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.radiusHandleColor&#32;=&#32;Color.clear;
<anchor xml:id="__path_editor_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorAngleHandle.angleHandleColor&#32;=&#32;Color.white;
<anchor xml:id="__path_editor_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00663"/>00663 
<anchor xml:id="__path_editor_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResetState&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectedSegmentIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draggingHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mouseOverHandleIndex&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleIndexToDisplayAsTransform&#32;=&#32;-1;
<anchor xml:id="__path_editor_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedScreenSpaceLine&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedNormalsVertexPath&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00671"/>00671 
<anchor xml:id="__path_editor_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.OnModified&#32;-=&#32;OnPathModifed;
<anchor xml:id="__path_editor_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bezierPath.OnModified&#32;+=&#32;OnPathModifed;
<anchor xml:id="__path_editor_8cs_source_1l00674"/>00674 
<anchor xml:id="__path_editor_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneView.RepaintAll&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.QueuePlayerLoopUpdate&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00678"/>00678 
<anchor xml:id="__path_editor_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnPathModifed&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedScreenSpaceLine&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedNormalsVertexPath&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00682"/>00682 
<anchor xml:id="__path_editor_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RepaintUnfocusedSceneViews&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00685"/>00685 
<anchor xml:id="__path_editor_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RepaintUnfocusedSceneViews&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;multiple&#32;scene&#32;views&#32;are&#32;open,&#32;repaint&#32;those&#32;which&#32;do&#32;not&#32;have&#32;focus.</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SceneView.sceneViews.Count&#32;&gt;&#32;1)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SceneView&#32;sv&#32;<emphasis role="keywordflow">in</emphasis>&#32;SceneView.sceneViews)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorWindow.focusedWindow&#32;!=&#32;(EditorWindow)&#32;sv)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sv.Repaint&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00696"/>00696 
<anchor xml:id="__path_editor_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdatePathMouseInfo&#32;()&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00698"/>00698 
<anchor xml:id="__path_editor_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!hasUpdatedScreenSpaceLine&#32;||&#32;(screenSpaceLine&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;screenSpaceLine.TransformIsOutOfDate&#32;()))&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;screenSpaceLine&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ScreenSpacePolyLine&#32;(bezierPath,&#32;creator.transform,&#32;screenPolylineMaxAngleError,&#32;screenPolylineMinVertexDst);
<anchor xml:id="__path_editor_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasUpdatedScreenSpaceLine&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__path_editor_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathMouseInfo&#32;=&#32;screenSpaceLine.CalculateMouseInfo&#32;();
<anchor xml:id="__path_editor_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00705"/>00705 
<anchor xml:id="__path_editor_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetHandleDiameter&#32;(<emphasis role="keywordtype">float</emphasis>&#32;diameter,&#32;Vector3&#32;handlePosition)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scaledDiameter&#32;=&#32;diameter&#32;*&#32;constantHandleScale;
<anchor xml:id="__path_editor_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data.keepConstantHandleSize)&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scaledDiameter&#32;*=&#32;HandleUtility.GetHandleSize&#32;(handlePosition)&#32;*&#32;2.5f;
<anchor xml:id="__path_editor_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;scaledDiameter;
<anchor xml:id="__path_editor_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00713"/>00713 
<anchor xml:id="__path_editor_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_bezier_path">BezierPath</link>&#32;bezierPath&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data.bezierPath;
<anchor xml:id="__path_editor_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00719"/>00719 
<anchor xml:id="__path_editor_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_path_creation_1_1_path_creator_data">PathCreatorData</link>&#32;data&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;creator.EditorData;
<anchor xml:id="__path_editor_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00725"/>00725 
<anchor xml:id="__path_editor_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;editingNormals&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__path_editor_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tools.current&#32;==&#32;Tool.Rotate&#32;&amp;&amp;&#32;handleIndexToDisplayAsTransform&#32;%&#32;3&#32;==&#32;0&#32;&amp;&amp;&#32;bezierPath.Space&#32;==&#32;PathSpace.xyz;
<anchor xml:id="__path_editor_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00731"/>00731 
<anchor xml:id="__path_editor_8cs_source_1l00732"/>00732 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__path_editor_8cs_source_1l00733"/>00733 
<anchor xml:id="__path_editor_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;}
<anchor xml:id="__path_editor_8cs_source_1l00735"/>00735 
<anchor xml:id="__path_editor_8cs_source_1l00736"/>00736 }
</programlisting></section>
